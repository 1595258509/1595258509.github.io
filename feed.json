{
    "version": "https://jsonfeed.org/version/1",
    "title": "MurlorsのBlog",
    "subtitle": "",
    "icon": "https://murlors.netlify.app/assets/favicon.ico",
    "description": "Hi, I'm Murlors.",
    "home_page_url": "https://murlors.netlify.app",
    "items": [
        {
            "id": "https://murlors.netlify.app/hello-world/",
            "url": "https://murlors.netlify.app/hello-world/",
            "title": "Hello World",
            "date_published": "2024-06-30T09:48:29.777Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        },
        {
            "id": "https://murlors.netlify.app/computer-science/reverse-engineering/binary-bombs/",
            "url": "https://murlors.netlify.app/computer-science/reverse-engineering/binary-bombs/",
            "title": "Binary Bombs | 二进制炸弹",
            "date_published": "2023-05-13T07:30:00.000Z",
            "content_html": "<h1 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<p>首先我们打开 <code>bomb.c</code> :</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/***************************************************************************</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Dr. Evil's Insidious Bomb, Version 1.1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * Copyright 2011, Dr. Evil Incorporated. All rights reserved.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * LICENSE:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * Dr. Evil Incorporated (the PERPETRATOR) hereby grants you (the</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * VICTIM) explicit permission to use this bomb (the BOMB).  This is a</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * time limited license, which expires on the death of the VICTIM.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * The PERPETRATOR takes no responsibility for damage, frustration,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * insanity, bug-eyes, carpal-tunnel syndrome, loss of sleep, or other</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * harm to the VICTIM.  Unless the PERPETRATOR wants to take credit,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * that is.  The VICTIM may not distribute this bomb source code to</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * any enemies of the PERPETRATOR.  No VICTIM may debug,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * reverse-engineer, run \"strings\" on, decompile, decrypt, or use any</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * other technique to gain knowledge of and defuse the BOMB.  BOMB</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * proof clothing may not be worn when handling this program.  The</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * PERPETRATOR will not apologize for the PERPETRATOR's poor sense of</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * humor.  This license is null and void where the BOMB is prohibited</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * by law.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> ***************************************************************************/</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"support.h\"</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"phases.h\"</span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">/* </pre></td></tr><tr><td data-num=\"29\"></td><td><pre> * Note to self: Remember to erase this file so my victims will have no</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> * idea what is going on, and so they will all blow up in a</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> * spectaculary fiendish explosion. -- Dr. Evil </pre></td></tr><tr><td data-num=\"32\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>FILE <span class=\"token operator\">*</span>infile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\">/* Note to self: remember to port this bomb to Windows and put a </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>     * fantastic GUI on it. */</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">/* When run with no arguments, the bomb reads its input lines </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     * from standard input. */</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argc <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    infile <span class=\"token operator\">=</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">/* When run with one argument &lt;file>, the bomb reads from &lt;file> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     * until EOF, and then switches to standard input. Thus, as you </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     * defuse each phase, you can add its defusing string to &lt;file> and</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     * avoid having to retype it. */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argc <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>infile <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: Error: Couldn't open %s\\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">/* You can't call the bomb with more than 1 command line argument. */</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Usage: %s [&lt;input_file>]\\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\">/* Do all sorts of secret stuff that makes the bomb harder to defuse. */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token function\">initialize_bomb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to my fiendish little bomb. You have 6 phases with\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"which to blow yourself up. Have a nice day!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">/* Hmm...  Six phases must be more secure than one phase! */</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    input <span class=\"token operator\">=</span> <span class=\"token function\">read_line</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">/* Get input                   */</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">phase_1</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">/* Run the phase               */</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">phase_defused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">/* Drat!  They figured it out!</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                      * Let me know how they did it. */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Phase 1 defused. How about the next one?\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token comment\">/* The second phase is harder.  No one will ever figure out</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>     * how to defuse this... */</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    input <span class=\"token operator\">=</span> <span class=\"token function\">read_line</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token function\">phase_2</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token function\">phase_defused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That's number 2.  Keep going!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token comment\">/* I guess this is too easy so far.  Some more complex code will</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>     * confuse people. */</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    input <span class=\"token operator\">=</span> <span class=\"token function\">read_line</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token function\">phase_3</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token function\">phase_defused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Halfway there!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\">/* Oh yeah?  Well, how good is your math?  Try on this saucy problem! */</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    input <span class=\"token operator\">=</span> <span class=\"token function\">read_line</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token function\">phase_4</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token function\">phase_defused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"So you got that one.  Try this one.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token comment\">/* Round and 'round in memory we go, where we stop, the bomb blows! */</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    input <span class=\"token operator\">=</span> <span class=\"token function\">read_line</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token function\">phase_5</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token function\">phase_defused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good work!  On to the next...\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token comment\">/* This phase will never be used, since no one will get past the</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     * earlier ones.  But just in case, make this one extra hard. */</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    input <span class=\"token operator\">=</span> <span class=\"token function\">read_line</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token function\">phase_6</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token function\">phase_defused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token comment\">/* Wow, they got it!  But isn't something... missing?  Perhaps</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>     * something they overlooked?  Mua ha ha ha ha! */</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到有 6 个 phase，每个 phase 基本都是要我们输入一行字符，然后它调用了判断我们的输入是否正确的函数。<br />\n知道要干什么之后把 bomb 文件反汇编一下:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>objdump <span class=\"token parameter variable\">-d</span> bomb <span class=\"token operator\">></span> bomb.asm</pre></td></tr></table></figure><p>得到了 bomb 的反汇编文件 <code>bomb.asm</code> ，然后就可以着手分析了。<br />\n在反汇编文件中搜索 phase，找到了各个 phase 所在地，就可以用 GDB 来进行调试了。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gdb bomb</pre></td></tr></table></figure><p>然后在 gdb 中输入 <code>disas phase_1</code> ，就可以看到 phase_1 的反汇编代码了，如下所示：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) disas phase_1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Dump of assembler code for function phase_1:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token number\">0x08048bce</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token operator\">></span>:     push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token number\">0x08048bcf</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">></span>:     mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token number\">0x08048bd1</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">></span>:     sub    <span class=\"token operator\">$</span><span class=\"token number\">0x18</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token number\">0x08048bd4</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">></span>:     movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a354</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token number\">0x08048bdc</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">14</span><span class=\"token operator\">></span>:    mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token number\">0x08048bdf</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">17</span><span class=\"token operator\">></span>:    mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token number\">0x08048be2</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token operator\">></span>:    call   <span class=\"token number\">0x804915a</span> <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token number\">0x08048be7</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">25</span><span class=\"token operator\">></span>:    test   <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token number\">0x08048be9</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">27</span><span class=\"token operator\">></span>:    je     <span class=\"token number\">0x8048bf0</span> <span class=\"token operator\">&lt;</span>phase_1<span class=\"token operator\">+</span><span class=\"token number\">34</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token number\">0x08048beb</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">29</span><span class=\"token operator\">></span>:    call   <span class=\"token number\">0x80493bd</span> <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token number\">0x08048bf0</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">34</span><span class=\"token operator\">></span>:    leave</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">0x08048bf1</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">+</span><span class=\"token number\">35</span><span class=\"token operator\">></span>:    ret</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>End of assembler dump.</pre></td></tr></table></figure><p>给爆炸和 phase_1 打上断点</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) b explode_bomb</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Breakpoint <span class=\"token number\">1</span> at <span class=\"token number\">0x80493c3</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>(gdb) b phase_1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Breakpoint <span class=\"token number\">2</span> at <span class=\"token number\">0x8048bd4</span></pre></td></tr></table></figure><h1 id=\"phase_1\"><a class=\"anchor\" href=\"#phase_1\">#</a> phase_1</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048bce <span class=\"token operator\">&lt;</span>phase_1<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048bce: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048bcf: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048bd1: <span class=\"token number\">83</span> ec <span class=\"token number\">18</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x18</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048bd4: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> <span class=\"token number\">54</span> a3 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a354</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048bdb: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048bdc: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048bdf: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048be2: e8 <span class=\"token number\">73</span> <span class=\"token number\">05</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   804915a <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048be7: <span class=\"token number\">85</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048be9: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     8048bf0 <span class=\"token operator\">&lt;</span>phase_1<span class=\"token operator\">+</span><span class=\"token number\">0x22</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048beb: e8 cd <span class=\"token number\">07</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048bf0: c9                    leave</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048bf1: c3                    ret</pre></td></tr></table></figure><p>调用 <code>string_not_equal</code>  函数判断输入的字符串与存储在 <code>0x804a354</code>  处的字符串是否相等，若相等（所调用函数为 0）炸弹就不会炸。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804a354</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804a354</span>:      <span class=\"token string\">\"I am the mayor. I can do anything I want.\"</span></pre></td></tr></table></figure><p>所以本关的答案就是 <code>0x804a354</code>  处的字符串，只需通过 gdb 得到该地址的字符串即可。</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/W43xByDoRJA9tzl.png\" alt=\"\" /></p>\n<h1 id=\"phase_2\"><a class=\"anchor\" href=\"#phase_2\">#</a> phase_2</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048bf2 <span class=\"token operator\">&lt;</span>phase_2<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048bf2: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048bf3: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048bf5: <span class=\"token number\">83</span> ec <span class=\"token number\">38</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x38</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048bf8: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> dc              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x24</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048bfb: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048bff: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048c02: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048c05: e8 bb <span class=\"token number\">04</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80490c5 <span class=\"token operator\">&lt;</span>read_six_numbers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048c0a: 8b <span class=\"token number\">45</span> dc              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x24</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048c0d: <span class=\"token number\">85</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048c0f: <span class=\"token number\">75</span> <span class=\"token number\">08</span>                 jne    8048c19 <span class=\"token operator\">&lt;</span>phase_2<span class=\"token operator\">+</span><span class=\"token number\">0x27</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048c11: 8b <span class=\"token number\">45</span> e0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x20</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048c14: <span class=\"token number\">83</span> f8 <span class=\"token number\">01</span>              cmp    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 8048c17: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     8048c1e <span class=\"token operator\">&lt;</span>phase_2<span class=\"token operator\">+</span><span class=\"token number\">0x2c</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> 8048c19: e8 9f <span class=\"token number\">07</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 8048c1e: c7 <span class=\"token number\">45</span> f4 <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x2</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 8048c25: eb 2a                 jmp    8048c51 <span class=\"token operator\">&lt;</span>phase_2<span class=\"token operator\">+</span><span class=\"token number\">0x5f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 8048c27: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 8048c2a: 8b <span class=\"token number\">44</span> <span class=\"token number\">85</span> dc           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x24</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 8048c2e: 8b <span class=\"token number\">55</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 8048c31: <span class=\"token number\">83</span> ea <span class=\"token number\">02</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x2</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> 8048c34: 8b 4c <span class=\"token number\">95</span> dc           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x24</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">ecx</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> 8048c38: 8b <span class=\"token number\">55</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 8048c3b: <span class=\"token number\">83</span> ea <span class=\"token number\">01</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 8048c3e: 8b <span class=\"token number\">54</span> <span class=\"token number\">95</span> dc           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x24</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> 8048c42: <span class=\"token number\">01</span> ca                 add    <span class=\"token operator\">%</span><span class=\"token register variable\">ecx</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 8048c44: <span class=\"token number\">39</span> d0                 cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 8048c46: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     8048c4d <span class=\"token operator\">&lt;</span>phase_2<span class=\"token operator\">+</span><span class=\"token number\">0x5b</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048c48: e8 <span class=\"token number\">70</span> <span class=\"token number\">07</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 8048c4d: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f4 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 8048c51: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f4 <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"33\"></td><td><pre> 8048c55: 7e d0                 jle    8048c27 <span class=\"token operator\">&lt;</span>phase_2<span class=\"token operator\">+</span><span class=\"token number\">0x35</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 8048c57: c9                    leave</pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 8048c58: c3                    ret</pre></td></tr></table></figure><p>首先调用 <code>read_six_numbers</code> ，获取六个整数，然后检查第一个整数是否为 0，再检查第二个整数是否为 1，然后进入一个循环，每次迭代时检查下一个整数是否等于前两个整数之和，如果以上条件有一个不满足，则会调用 <code>explode_bomb</code>  函数，炸弹直接爆炸，反之所有整数都满足条件，则函数正常返回。</p>\n<p>所以我们需要做的便是构造一个 0、1 开始的斐波那契数列，因而最后的答案为 <code>0 1 1 2 3 5</code> 。</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/8IveKOk7MLEFmzs.png\" alt=\"\" /></p>\n<h1 id=\"phase_3\"><a class=\"anchor\" href=\"#phase_3\">#</a> phase_3</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048c59 <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048c59: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048c5a: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048c5c: <span class=\"token number\">83</span> ec <span class=\"token number\">28</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x28</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048c5f: c7 <span class=\"token number\">45</span> f4 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048c66: c7 <span class=\"token number\">45</span> f0 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048c6d: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> e8              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048c70: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> 0c           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048c74: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> ec              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048c77: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">08</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048c7b: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> 7e a3 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a37e</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048c82: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048c83: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048c86: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 8048c89: e8 <span class=\"token number\">02</span> fc ff ff        call   <span class=\"token number\">8048890</span> <span class=\"token operator\">&lt;</span>__isoc99_sscanf@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> 8048c8e: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 8048c91: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">01</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 8048c95: 7f <span class=\"token number\">05</span>                 jg     8048c9c <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0x43</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 8048c97: e8 <span class=\"token number\">21</span> <span class=\"token number\">07</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 8048c9c: 8b <span class=\"token number\">45</span> ec              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 8048c9f: <span class=\"token number\">83</span> f8 <span class=\"token number\">07</span>              cmp    <span class=\"token operator\">$</span><span class=\"token number\">0x7</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 8048ca2: <span class=\"token number\">77</span> <span class=\"token number\">51</span>                 ja     8048cf5 <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0x9c</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> 8048ca4: 8b <span class=\"token number\">04</span> <span class=\"token number\">85</span> <span class=\"token number\">84</span> a3 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  mov    <span class=\"token number\">0x804a384</span>(,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> 8048cab: ff e0                 jmp    <span class=\"token operator\">*</span><span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 8048cad: c7 <span class=\"token number\">45</span> f4 <span class=\"token number\">90</span> <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x390</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 8048cb4: eb <span class=\"token number\">44</span>                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> 8048cb6: c7 <span class=\"token number\">45</span> f4 7e <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x27e</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 8048cbd: eb 3b                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 8048cbf: c7 <span class=\"token number\">45</span> f4 eb <span class=\"token number\">01</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x1eb</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048cc6: eb <span class=\"token number\">32</span>                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 8048cc8: c7 <span class=\"token number\">45</span> f4 9f <span class=\"token number\">01</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x19f</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 8048ccf: eb <span class=\"token number\">29</span>                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> 8048cd1: c7 <span class=\"token number\">45</span> f4 dc <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x2dc</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 8048cd8: eb <span class=\"token number\">20</span>                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 8048cda: c7 <span class=\"token number\">45</span> f4 d3 <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x3d3</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 8048ce1: eb <span class=\"token number\">17</span>                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre> 8048ce3: c7 <span class=\"token number\">45</span> f4 <span class=\"token number\">78</span> <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x378</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"38\"></td><td><pre> 8048cea: eb 0e                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> 8048cec: c7 <span class=\"token number\">45</span> f4 <span class=\"token number\">51</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x51</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"40\"></td><td><pre> 8048cf3: eb <span class=\"token number\">05</span>                 jmp    8048cfa <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre> 8048cf5: e8 c3 <span class=\"token number\">06</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> 8048cfa: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre> 8048cfd: <span class=\"token number\">39</span> <span class=\"token number\">45</span> f4              cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre> 8048d00: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     8048d07 <span class=\"token operator\">&lt;</span>phase_3<span class=\"token operator\">+</span><span class=\"token number\">0xae</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre> 8048d02: e8 b6 <span class=\"token number\">06</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre> 8048d07: c9                    leave</pre></td></tr><tr><td data-num=\"47\"></td><td><pre> 8048d08: c3                    ret</pre></td></tr></table></figure><figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804a37e</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804a37e</span>:      <span class=\"token string\">\"%d %d\"</span></pre></td></tr></table></figure><p>调用 <code>__isoc99_sscanf@plt</code>  函数，获得两个整数，若 <code>sscanf</code>  函数返回值 &lt;=1，无法从输入中获取两个整数，则调用 <code>explode_bomb</code>  函数，炸弹直接爆炸。<br />\n接下来再检测第一个整数是否 &lt;=7，若不是，炸弹也直接爆炸。<br />\n然后，再使用一个跳转表来根据第一个整数的值确定第二个整数所应该是的值。<br />\n再比较输入的第二个整数与期望的值是否相等，如果不是，则调用 <code>explode_bomb</code>  函数，炸弹爆炸，反之函数正常返回。<br />\n所以我们要做的就是查看 <code>0x804a384</code>  处的值，由于输入的第一个整数的范围在 <code>0&lt;=num1&lt;=7</code>  之间有 7 种可能。所以我们直接 <code>x /7wx 0x804a384</code>  即可获取相应跳转地址。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>7wx <span class=\"token number\">0x804a384</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804a384</span>:      <span class=\"token number\">0x08048cad</span>      <span class=\"token number\">0x08048cb6</span>      <span class=\"token number\">0x08048cbf</span>      <span class=\"token number\">0x08048cc8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0x804a394</span>:      <span class=\"token number\">0x08048cd1</span>      <span class=\"token number\">0x08048cda</span>      <span class=\"token number\">0x08048ce3</span></pre></td></tr></table></figure><p>得到跳转地址后，在根据反编译得到的汇编代码，获得每个第一个整数对应的第二个整数：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">num1</th>\n<th style=\"text-align:center\">num2_hex</th>\n<th style=\"text-align:center\">num2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">0x390</td>\n<td style=\"text-align:center\">912</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">0x27e</td>\n<td style=\"text-align:center\">638</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">0x1eb</td>\n<td style=\"text-align:center\">491</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">0x19f</td>\n<td style=\"text-align:center\">415</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">0x2dc</td>\n<td style=\"text-align:center\">732</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">0x3d3</td>\n<td style=\"text-align:center\">979</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">0x378</td>\n<td style=\"text-align:center\">888</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">0x51</td>\n<td style=\"text-align:center\">81</td>\n</tr>\n</tbody>\n</table>\n<p>我们选择一组作为输入即可。</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/EnYR8w3TvcHgoJS.png\" alt=\"\" /></p>\n<h1 id=\"phase_4\"><a class=\"anchor\" href=\"#phase_4\">#</a> phase_4</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048d60 <span class=\"token operator\">&lt;</span>phase_4<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048d60: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048d61: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048d63: <span class=\"token number\">83</span> ec <span class=\"token number\">38</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x38</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048d66: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> e8              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048d69: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> 0c           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048d6d: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> e4              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x1c</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048d70: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">08</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048d74: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> 7e a3 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a37e</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048d7b: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048d7c: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048d7f: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048d82: e8 <span class=\"token number\">09</span> fb ff ff        call   <span class=\"token number\">8048890</span> <span class=\"token operator\">&lt;</span>__isoc99_sscanf@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048d87: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 8048d8a: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f4 <span class=\"token number\">02</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x2</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> 8048d8e: <span class=\"token number\">75</span> <span class=\"token number\">10</span>                 jne    8048da0 <span class=\"token operator\">&lt;</span>phase_4<span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 8048d90: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 8048d93: <span class=\"token number\">83</span> f8 <span class=\"token number\">01</span>              cmp    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 8048d96: 7e <span class=\"token number\">08</span>                 jle    8048da0 <span class=\"token operator\">&lt;</span>phase_4<span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 8048d98: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 8048d9b: <span class=\"token number\">83</span> f8 <span class=\"token number\">04</span>              cmp    <span class=\"token operator\">$</span><span class=\"token number\">0x4</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 8048d9e: 7e <span class=\"token number\">05</span>                 jle    8048da5 <span class=\"token operator\">&lt;</span>phase_4<span class=\"token operator\">+</span><span class=\"token number\">0x45</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> 8048da0: e8 <span class=\"token number\">18</span> <span class=\"token number\">06</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> 8048da5: c7 <span class=\"token number\">45</span> f0 <span class=\"token number\">07</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x7</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 8048dac: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 8048daf: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> 8048db3: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 8048db6: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 8048db9: e8 4b ff ff ff        call   8048d09 <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048dbe: <span class=\"token number\">89</span> <span class=\"token number\">45</span> ec              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 8048dc1: 8b <span class=\"token number\">45</span> e4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x1c</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 8048dc4: <span class=\"token number\">39</span> <span class=\"token number\">45</span> ec              cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"33\"></td><td><pre> 8048dc7: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     8048dce <span class=\"token operator\">&lt;</span>phase_4<span class=\"token operator\">+</span><span class=\"token number\">0x6e</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 8048dc9: e8 ef <span class=\"token number\">05</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 8048dce: c9                    leave</pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 8048dcf: c3                    ret</pre></td></tr></table></figure><p>调用 <code>__isoc99_sscanf@plt</code>  函数，获得两个整数，若 <code>sscanf</code>  函数返回值不等于 2，则调用 <code>explode_bomb</code>  函数，炸弹直接爆炸。<br />\n接下来再检测第一个整数是否满足 <code>1&lt;num1&lt;=4</code> ，若不是，炸弹也直接爆炸。<br />\n然后，再调用 <code>func4</code>  函数，传入的参数分别是 7 和输入的第一个整数 <code>num1</code> ，将函数的返回值与输入的第二个整数进行比较。如果不相等，炸弹爆炸，反之函数正常返回。</p>\n<p>所以我们接下来要做的就是去刨析 <code>func4</code>  函数的构造：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048d09 <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048d09: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048d0a: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048d0c: <span class=\"token number\">53</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048d0d: <span class=\"token number\">83</span> ec <span class=\"token number\">14</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x14</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048d10: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> <span class=\"token number\">08</span> <span class=\"token number\">00</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048d14: 7f <span class=\"token number\">07</span>                 jg     8048d1d <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">+</span><span class=\"token number\">0x14</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048d16: b8 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        mov    <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048d1b: eb <span class=\"token number\">3d</span>                 jmp    8048d5a <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">+</span><span class=\"token number\">0x51</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048d1d: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> <span class=\"token number\">08</span> <span class=\"token number\">01</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048d21: <span class=\"token number\">75</span> <span class=\"token number\">05</span>                 jne    8048d28 <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">+</span><span class=\"token number\">0x1f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048d23: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048d26: eb <span class=\"token number\">32</span>                 jmp    8048d5a <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">+</span><span class=\"token number\">0x51</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048d28: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 8048d2b: <span class=\"token number\">8d</span> <span class=\"token number\">50</span> ff              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x1</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> 8048d2e: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 8048d31: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 8048d35: <span class=\"token number\">89</span> <span class=\"token number\">14</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 8048d38: e8 cc ff ff ff        call   8048d09 <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 8048d3d: 8b <span class=\"token number\">55</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 8048d40: <span class=\"token number\">8d</span> 1c <span class=\"token number\">10</span>              lea    (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">1</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 8048d43: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> 8048d46: <span class=\"token number\">8d</span> <span class=\"token number\">50</span> fe              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x2</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> 8048d49: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 8048d4c: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 8048d50: <span class=\"token number\">89</span> <span class=\"token number\">14</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> 8048d53: e8 b1 ff ff ff        call   8048d09 <span class=\"token operator\">&lt;</span>func4<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 8048d58: <span class=\"token number\">01</span> d8                 add    <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 8048d5a: <span class=\"token number\">83</span> c4 <span class=\"token number\">14</span>              add    <span class=\"token operator\">$</span><span class=\"token number\">0x14</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048d5d: 5b                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 8048d5e: <span class=\"token number\">5d</span>                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 8048d5f: c3                    ret</pre></td></tr></table></figure><p><code>func4</code>  是一个递归函数，其接受两个整数参数同时返回一个整数值。<br />\n首先它会检查第一个参数是否为 0 或 1。如果是 0，则返回 0。如果是 1，则返回第二个参数的值。否则，它会将第一个参数减 1 并递归调用 <code>func4</code>  函数，将第一个参数减 2 并再次递归调用 <code>func4</code>  函数，再将两次递归调用的返回值与第二个参数 三个数相加作为当次函数的返回值返回。<br />\n因此 <code>func4</code>  可以抽象为以下的式子：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>y</mi><mo>+</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\"> f(x,y)=\\begin{cases}\n    0 &amp; x \\leq 0 \\\\\n    y &amp; x = 1 \\\\\n    f(x-1,y)+y+f(x-2,y) &amp; x &gt; 1\n\\end{cases} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.32em;vertical-align:-1.91em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35em;\"><span style=\"top:-2.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.192em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.8889em\" height=\"0.316em\" style=\"width:0.8889em\" viewBox=\"0 0 888.89 316\" preserveAspectRatio=\"xMinYMin\"><path d=\"M384 0 H504 V316 H384z M384 0 H504 V316 H384z\"/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.8889em\" height=\"0.316em\" style=\"width:0.8889em\" viewBox=\"0 0 888.89 316\" preserveAspectRatio=\"xMinYMin\"><path d=\"M384 0 H504 V316 H384z M384 0 H504 V316 H384z\"/></svg></span></span><span style=\"top:-4.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.85em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>因为 <code>phase_4</code>  获取的第一个数值， <code>1&lt;num1&lt;=4</code> ，有三种可能，所以我们相对应有三种答案，在这里我们得到答案最方便的方法是编写一个程序模拟 <code>func4</code>  的过程来计算结果。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"iostream\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">func4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> y <span class=\"token operator\">+</span> <span class=\"token function\">func4</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">func4</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">func4</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">func4</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">func4</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>得到相应答案：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">x</th>\n<th style=\"text-align:center\">y</th>\n<th style=\"text-align:center\">result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">66</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">99</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">132</td>\n</tr>\n</tbody>\n</table>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/aocRXbwpmYJIgit.png\" alt=\"\" /></p>\n<h1 id=\"phase_5\"><a class=\"anchor\" href=\"#phase_5\">#</a> phase_5</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048dd0 <span class=\"token operator\">&lt;</span>phase_5<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048dd0: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048dd1: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048dd3: <span class=\"token number\">83</span> ec <span class=\"token number\">28</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x28</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048dd6: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048dd9: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048ddc: e8 <span class=\"token number\">4d</span> <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   804912e <span class=\"token operator\">&lt;</span>string_length<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048de1: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048de4: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">06</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x6</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048de8: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     8048def <span class=\"token operator\">&lt;</span>phase_5<span class=\"token operator\">+</span><span class=\"token number\">0x1f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048dea: e8 ce <span class=\"token number\">05</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048def: c7 <span class=\"token number\">45</span> f4 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048df6: eb <span class=\"token number\">26</span>                 jmp    8048e1e <span class=\"token operator\">&lt;</span>phase_5<span class=\"token operator\">+</span><span class=\"token number\">0x4e</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048df8: 8b <span class=\"token number\">55</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 8048dfb: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> 8048dfe: <span class=\"token number\">01</span> d0                 add    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token number\">8048e00</span>: 0f b6 <span class=\"token number\">00</span>              movzbl (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token number\">8048e03</span>: 0f be c0              movsbl <span class=\"token operator\">%</span><span class=\"token register variable\">al</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token number\">8048e06</span>: <span class=\"token number\">83</span> e0 0f              and    <span class=\"token operator\">$</span><span class=\"token number\">0xf</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token number\">8048e09</span>: 0f b6 <span class=\"token number\">80</span> a4 c1 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movzbl <span class=\"token number\">0x804c1a4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token number\">8048e10</span>: <span class=\"token number\">8d</span> <span class=\"token number\">4d</span> e9              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x17</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">ecx</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token number\">8048e13</span>: 8b <span class=\"token number\">55</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token number\">8048e16</span>: <span class=\"token number\">01</span> ca                 add    <span class=\"token operator\">%</span><span class=\"token register variable\">ecx</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token number\">8048e18</span>: <span class=\"token number\">88</span> <span class=\"token number\">02</span>                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">al</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 8048e1a: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f4 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 8048e1e: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f4 <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token number\">8048e22</span>: 7e d4                 jle    8048df8 <span class=\"token operator\">&lt;</span>phase_5<span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token number\">8048e24</span>: c6 <span class=\"token number\">45</span> ef <span class=\"token number\">00</span>           movb   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x11</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token number\">8048e28</span>: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> a4 a3 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a3a4</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048e2f: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre> <span class=\"token number\">8048e30</span>: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> e9              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x17</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token number\">8048e33</span>: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"33\"></td><td><pre> <span class=\"token number\">8048e36</span>: e8 1f <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   804915a <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 8048e3b: <span class=\"token number\">85</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> <span class=\"token number\">8048e3d</span>: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     <span class=\"token number\">8048e44</span> <span class=\"token operator\">&lt;</span>phase_5<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 8048e3f: e8 <span class=\"token number\">79</span> <span class=\"token number\">05</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre> <span class=\"token number\">8048e44</span>: c9                    leave</pre></td></tr><tr><td data-num=\"38\"></td><td><pre> <span class=\"token number\">8048e45</span>: c3                    ret</pre></td></tr></table></figure><p>首先调用了 <code>string_length</code>  函数来获取输入字符串的长度。然后检查其长度是否等于 6，如果不是，则调用 <code>explode_bomb</code>  函数，炸弹爆炸。<br />\n接下来进入到一个循环结构中，在每次迭代中都会处理字符串中的一个字符。对于这个字符，它首先将该字符转换它他的 <code>ascii</code>  码，然后将其与 <code>0xf</code>  进行按位与，然后，使用这个按位与后的结果作为索引在 <code>0x804c1a4</code>  处的一个长度为 16 的字符数组取到相应的字符。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804c1a4</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804c1a4</span> <span class=\"token operator\">&lt;</span>array<span class=\"token number\">.2906</span><span class=\"token operator\">></span>: <span class=\"token string\">\"maduiersnfotvbyl\"</span></pre></td></tr></table></figure><p>最后调用 <code>strings_not_equal</code>  函数，来判断根据索引所取得的字符串是否等于地址 <code>0x804a3a4</code>  处的字符串。如果不是，则调用 <code>explode_bomb</code>  函数，炸弹爆炸，反之函数正常返回。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804a3a4</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804a3a4</span>:      <span class=\"token string\">\"sabres\"</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">m</th>\n<th style=\"text-align:center\">a</th>\n<th style=\"text-align:center\">d</th>\n<th style=\"text-align:center\">u</th>\n<th style=\"text-align:center\">i</th>\n<th style=\"text-align:center\">e</th>\n<th style=\"text-align:center\">r</th>\n<th style=\"text-align:center\">s</th>\n<th style=\"text-align:center\">n</th>\n<th style=\"text-align:center\">f</th>\n<th style=\"text-align:center\">o</th>\n<th style=\"text-align:center\">t</th>\n<th style=\"text-align:center\">v</th>\n<th style=\"text-align:center\">b</th>\n<th style=\"text-align:center\">y</th>\n<th style=\"text-align:center\">l</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0x0</td>\n<td style=\"text-align:center\">0x1</td>\n<td style=\"text-align:center\">0x2</td>\n<td style=\"text-align:center\">0x3</td>\n<td style=\"text-align:center\">0x4</td>\n<td style=\"text-align:center\">0x5</td>\n<td style=\"text-align:center\">0x6</td>\n<td style=\"text-align:center\">0x7</td>\n<td style=\"text-align:center\">0x8</td>\n<td style=\"text-align:center\">0x9</td>\n<td style=\"text-align:center\">0xa</td>\n<td style=\"text-align:center\">0xb</td>\n<td style=\"text-align:center\">0xc</td>\n<td style=\"text-align:center\">0xd</td>\n<td style=\"text-align:center\">0xe</td>\n<td style=\"text-align:center\">0xf</td>\n</tr>\n</tbody>\n</table>\n<p>所以我们便是要根据 <code>0x804c1a4</code>  处的索引数组，输入相应的 <code>ascii</code>  字符，是的索引后的结果字符串与 <code>0x804a3a4</code>  处字符串相等。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">s</th>\n<th style=\"text-align:center\">a</th>\n<th style=\"text-align:center\">b</th>\n<th style=\"text-align:center\">r</th>\n<th style=\"text-align:center\">e</th>\n<th style=\"text-align:center\">s</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0x7</td>\n<td style=\"text-align:center\">0x1</td>\n<td style=\"text-align:center\">0xd</td>\n<td style=\"text-align:center\">0x6</td>\n<td style=\"text-align:center\">0x5</td>\n<td style=\"text-align:center\">0x7</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">-, =, M, m, ], }</td>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">7</td>\n</tr>\n</tbody>\n</table>\n<p>所以我们的答案可以是 <code>71m657</code> 。</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/YWymC29tiEbRU4h.png\" alt=\"\" /></p>\n<h1 id=\"phase_6\"><a class=\"anchor\" href=\"#phase_6\">#</a> phase_6</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">08048e46</span> <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token number\">8048e46</span>: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token number\">8048e47</span>: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token number\">8048e49</span>: <span class=\"token number\">83</span> ec <span class=\"token number\">58</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x58</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048e4c: c7 <span class=\"token number\">45</span> e8 e4 c0 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804c0e4</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">8048e53</span>: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> d0              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x30</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token number\">8048e56</span>: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048e5a: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token number\">8048e5d</span>: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">8048e60</span>: e8 <span class=\"token number\">60</span> <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80490c5 <span class=\"token operator\">&lt;</span>read_six_numbers<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token number\">8048e65</span>: c7 <span class=\"token number\">45</span> f0 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048e6c: eb 4c                 jmp    8048eba <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048e6e: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token number\">8048e71</span>: 8b <span class=\"token number\">44</span> <span class=\"token number\">85</span> d0           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x30</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">8048e75</span>: <span class=\"token number\">85</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">8048e77</span>: 7e 0c                 jle    <span class=\"token number\">8048e85</span> <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x3f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token number\">8048e79</span>: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 8048e7c: 8b <span class=\"token number\">44</span> <span class=\"token number\">85</span> d0           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x30</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token number\">8048e80</span>: <span class=\"token number\">83</span> f8 <span class=\"token number\">06</span>              cmp    <span class=\"token operator\">$</span><span class=\"token number\">0x6</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token number\">8048e83</span>: 7e <span class=\"token number\">05</span>                 jle    8048e8a <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x44</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token number\">8048e85</span>: e8 <span class=\"token number\">33</span> <span class=\"token number\">05</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 8048e8a: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token number\">8048e8d</span>: <span class=\"token number\">83</span> c0 <span class=\"token number\">01</span>              add    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token number\">8048e90</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> ec              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token number\">8048e93</span>: eb <span class=\"token number\">1b</span>                 jmp    8048eb0 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x6a</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> <span class=\"token number\">8048e95</span>: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token number\">8048e98</span>: 8b <span class=\"token number\">54</span> <span class=\"token number\">85</span> d0           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x30</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 8048e9c: 8b <span class=\"token number\">45</span> ec              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 8048e9f: 8b <span class=\"token number\">44</span> <span class=\"token number\">85</span> d0           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x30</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048ea3: <span class=\"token number\">39</span> c2                 cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 8048ea5: <span class=\"token number\">75</span> <span class=\"token number\">05</span>                 jne    8048eac <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x66</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 8048ea7: e8 <span class=\"token number\">11</span> <span class=\"token number\">05</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> 8048eac: <span class=\"token number\">83</span> <span class=\"token number\">45</span> ec <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 8048eb0: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> ec <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 8048eb4: 7e df                 jle    <span class=\"token number\">8048e95</span> <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x4f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 8048eb6: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f0 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"37\"></td><td><pre> 8048eba: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"38\"></td><td><pre> 8048ebe: 7e ae                 jle    8048e6e <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> 8048ec0: c7 <span class=\"token number\">45</span> f0 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"40\"></td><td><pre> 8048ec7: eb <span class=\"token number\">36</span>                 jmp    8048eff <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0xb9</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre> 8048ec9: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> 8048ecc: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"43\"></td><td><pre> 8048ecf: c7 <span class=\"token number\">45</span> ec <span class=\"token number\">01</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre> 8048ed6: eb <span class=\"token number\">0d</span>                 jmp    8048ee5 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x9f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre> 8048ed8: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre> 8048edb: 8b <span class=\"token number\">40</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre> 8048ede: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"48\"></td><td><pre> 8048ee1: <span class=\"token number\">83</span> <span class=\"token number\">45</span> ec <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"49\"></td><td><pre> 8048ee5: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> 8048ee8: 8b <span class=\"token number\">44</span> <span class=\"token number\">85</span> d0           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x30</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre> 8048eec: 3b <span class=\"token number\">45</span> ec              cmp    <span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre> 8048eef: 7f e7                 jg     8048ed8 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x92</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre> 8048ef1: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre> 8048ef4: 8b <span class=\"token number\">55</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre> 8048ef7: <span class=\"token number\">89</span> <span class=\"token number\">54</span> <span class=\"token number\">85</span> b8           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x48</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>)</pre></td></tr><tr><td data-num=\"56\"></td><td><pre> 8048efb: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f0 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"57\"></td><td><pre> 8048eff: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"58\"></td><td><pre> 8048f03: 7e c4                 jle    8048ec9 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x83</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre> 8048f05: 8b <span class=\"token number\">45</span> b8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x48</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre> 8048f08: <span class=\"token number\">89</span> <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"61\"></td><td><pre> 8048f0b: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> 8048f0e: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"63\"></td><td><pre> 8048f11: c7 <span class=\"token number\">45</span> f0 <span class=\"token number\">01</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"64\"></td><td><pre> 8048f18: eb 1a                 jmp    8048f34 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0xee</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre> 8048f1a: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre> 8048f1d: 8b <span class=\"token number\">54</span> <span class=\"token number\">85</span> b8           mov    <span class=\"token operator\">-</span><span class=\"token number\">0x48</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">4</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre> 8048f21: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre> 8048f24: <span class=\"token number\">89</span> <span class=\"token number\">50</span> <span class=\"token number\">08</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>)</pre></td></tr><tr><td data-num=\"69\"></td><td><pre> 8048f27: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre> 8048f2a: 8b <span class=\"token number\">40</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre> 8048f2d: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"72\"></td><td><pre> 8048f30: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f0 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"73\"></td><td><pre> 8048f34: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"74\"></td><td><pre> 8048f38: 7e e0                 jle    8048f1a <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0xd4</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre> 8048f3a: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre> 8048f3d: c7 <span class=\"token number\">40</span> <span class=\"token number\">08</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>)</pre></td></tr><tr><td data-num=\"77\"></td><td><pre> 8048f44: 8b <span class=\"token number\">45</span> e8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre> 8048f47: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"79\"></td><td><pre> 8048f4a: c7 <span class=\"token number\">45</span> f0 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"80\"></td><td><pre> 8048f51: eb <span class=\"token number\">23</span>                 jmp    8048f76 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x130</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre> 8048f53: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre> 8048f56: 8b <span class=\"token number\">10</span>                 mov    (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre> 8048f58: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre> 8048f5b: 8b <span class=\"token number\">40</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre> 8048f5e: 8b <span class=\"token number\">00</span>                 mov    (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre> 8048f60: <span class=\"token number\">39</span> c2                 cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre> 8048f62: <span class=\"token number\">7d</span> <span class=\"token number\">05</span>                 jge    8048f69 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x123</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre> 8048f64: e8 <span class=\"token number\">54</span> <span class=\"token number\">04</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre> 8048f69: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre> 8048f6c: 8b <span class=\"token number\">40</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre> 8048f6f: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"92\"></td><td><pre> 8048f72: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f0 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"93\"></td><td><pre> 8048f76: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">04</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x4</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"94\"></td><td><pre> 8048f7a: 7e d7                 jle    8048f53 <span class=\"token operator\">&lt;</span>phase_6<span class=\"token operator\">+</span><span class=\"token number\">0x10d</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre> 8048f7c: c9                    leave</pre></td></tr><tr><td data-num=\"96\"></td><td><pre> 8048f7d: c3                    ret</pre></td></tr></table></figure><p>先调用 <code>read_six_numbers</code> ，获取六个整数，判断输入的这六个数是否有相等的，如果有，则调用 <code>explode_bomb</code>  函数，炸弹爆炸。<br />\n获取完 6 个数后，从 <code>ebp-18 (0x804c0e4)</code>  中取一个偏移为 4 的值我们可以发现，取得值也是一个地址，再依次将其取出，结果如下：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>3wx <span class=\"token number\">0x0804c0e4</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804c0e4</span> <span class=\"token operator\">&lt;</span>node1<span class=\"token operator\">></span>:      <span class=\"token number\">0x0000017f</span>      <span class=\"token number\">0x00000001</span>      <span class=\"token number\">0x0804c0d8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>3wx <span class=\"token number\">0x0804c0d8</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0x804c0d8</span> <span class=\"token operator\">&lt;</span>node2<span class=\"token operator\">></span>:      <span class=\"token number\">0x00000202</span>      <span class=\"token number\">0x00000002</span>      <span class=\"token number\">0x0804c0cc</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>3wx <span class=\"token number\">0x0804c0cc</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0x804c0cc</span> <span class=\"token operator\">&lt;</span>node3<span class=\"token operator\">></span>:      <span class=\"token number\">0x000000b3</span>      <span class=\"token number\">0x00000003</span>      <span class=\"token number\">0x0804c0c0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>3wx <span class=\"token number\">0x0804c0c0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0x804c0c0</span> <span class=\"token operator\">&lt;</span>node4<span class=\"token operator\">></span>:      <span class=\"token number\">0x0000012e</span>      <span class=\"token number\">0x00000004</span>      <span class=\"token number\">0x0804c0b4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>3wx <span class=\"token number\">0x0804c0b4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0x804c0b4</span> <span class=\"token operator\">&lt;</span>node5<span class=\"token operator\">></span>:      <span class=\"token number\">0x0000035d</span>      <span class=\"token number\">0x00000005</span>      <span class=\"token number\">0x0804c0a8</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>3wx <span class=\"token number\">0x0804c0a8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">0x804c0a8</span> <span class=\"token operator\">&lt;</span>node6<span class=\"token operator\">></span>:      <span class=\"token number\">0x00000171</span>      <span class=\"token number\">0x00000006</span>      <span class=\"token number\">0x00000000</span></pre></td></tr></table></figure><p>不难发现，从 <code>0x804c0e4</code>  开始的正是一个链表，该链表结构中主要有三个元素：<br />\n1、 当前节点的值；2、当前节点再列表中的顺序；3、当前节点的下一个节点。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">node_add</th>\n<th style=\"text-align:center\">value_hex</th>\n<th style=\"text-align:center\">value</th>\n<th style=\"text-align:center\">order</th>\n<th style=\"text-align:center\">next_node_add</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0x804c0e4</td>\n<td style=\"text-align:center\">0x0000017f</td>\n<td style=\"text-align:center\">383</td>\n<td style=\"text-align:center\">0x00000001</td>\n<td style=\"text-align:center\">0x0804c0d8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0x804c0d8</td>\n<td style=\"text-align:center\">0x00000202</td>\n<td style=\"text-align:center\">514</td>\n<td style=\"text-align:center\">0x00000002</td>\n<td style=\"text-align:center\">0x0804c0cc</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0x0804c0cc</td>\n<td style=\"text-align:center\">0x000000b3</td>\n<td style=\"text-align:center\">179</td>\n<td style=\"text-align:center\">0x00000003</td>\n<td style=\"text-align:center\">0x0804c0c0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0x0804c0c0</td>\n<td style=\"text-align:center\">0x0000012e</td>\n<td style=\"text-align:center\">302</td>\n<td style=\"text-align:center\">0x00000004</td>\n<td style=\"text-align:center\">0x0804c0b4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0x0804c0b4</td>\n<td style=\"text-align:center\">0x0000035d</td>\n<td style=\"text-align:center\">861</td>\n<td style=\"text-align:center\">0x00000005</td>\n<td style=\"text-align:center\">0x0804c0a8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0x0804c0a8</td>\n<td style=\"text-align:center\">0x00000171</td>\n<td style=\"text-align:center\">369</td>\n<td style=\"text-align:center\">0x00000006</td>\n<td style=\"text-align:center\">0x00000000</td>\n</tr>\n</tbody>\n</table>\n<p>再回到汇编中，我们可以发现，它将输入的值作为顺序 <code>order</code> ，将原本的链表进行了非原地排序。<br />\n接着再分析之后的一个循环结构，可以发先它是在校验我们排序后的链表是否满足非递增的顺序。</p>\n<p>因此我们要做的就是针对取出来的数，进行递减的排序，然后对于排序后的元素，取其中的 <code>order</code>  作为输入即可满足要求。</p>\n<p>383,514,179,302,861,369  <code>--&gt;</code>  861,514,383,369,302,179  <code>--&gt;</code>  5 2 1 6 4 3<br />\n 得到答案 5 2 1 6 4 3</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/9cyUuALTRYsvFx1.png\" alt=\"\" /></p>\n<h1 id=\"phase_defused\"><a class=\"anchor\" href=\"#phase_defused\">#</a> phase_defused</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">080493e7</span> <span class=\"token operator\">&lt;</span>phase_defused<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token number\">80493e7</span>: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token number\">80493e8</span>: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 80493ea: <span class=\"token number\">81</span> ec <span class=\"token number\">88</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>     sub    <span class=\"token operator\">$</span><span class=\"token number\">0x88</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 80493f0: a1 e8 c3 <span class=\"token number\">04</span> <span class=\"token number\">08</span>        mov    <span class=\"token number\">0x804c3e8</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 80493f5: <span class=\"token number\">83</span> f8 <span class=\"token number\">06</span>              cmp    <span class=\"token operator\">$</span><span class=\"token number\">0x6</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 80493f8: <span class=\"token number\">75</span> <span class=\"token number\">72</span>                 jne    804946c <span class=\"token operator\">&lt;</span>phase_defused<span class=\"token operator\">+</span><span class=\"token number\">0x85</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 80493fa: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> a4              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x5c</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 80493fd: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">10</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">8049401</span>: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> 9c              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x64</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token number\">8049404</span>: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> 0c           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token number\">8049408</span>: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> a0              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x60</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 804940b: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">08</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 804940f: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> f3 a4 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a4f3</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">8049416</span>: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">8049417</span>: c7 <span class=\"token number\">04</span> <span class=\"token number\">24</span> f0 c4 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804c4f0</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 804941e: e8 <span class=\"token number\">6d</span> f4 ff ff        call   <span class=\"token number\">8048890</span> <span class=\"token operator\">&lt;</span>__isoc99_sscanf@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token number\">8049423</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token number\">8049426</span>: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f4 <span class=\"token number\">03</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x3</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 804942a: <span class=\"token number\">75</span> <span class=\"token number\">34</span>                 jne    <span class=\"token number\">8049460</span> <span class=\"token operator\">&lt;</span>phase_defused<span class=\"token operator\">+</span><span class=\"token number\">0x79</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 804942c: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> fc a4 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a4fc</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token number\">8049433</span>: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token number\">8049434</span>: <span class=\"token number\">8d</span> <span class=\"token number\">45</span> a4              lea    <span class=\"token operator\">-</span><span class=\"token number\">0x5c</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token number\">8049437</span>: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 804943a: e8 <span class=\"token number\">1b</span> fd ff ff        call   804915a <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 804943f: <span class=\"token number\">85</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token number\">8049441</span>: <span class=\"token number\">75</span> <span class=\"token number\">1d</span>                 jne    <span class=\"token number\">8049460</span> <span class=\"token operator\">&lt;</span>phase_defused<span class=\"token operator\">+</span><span class=\"token number\">0x79</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token number\">8049443</span>: c7 <span class=\"token number\">04</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> a5 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a504</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 804944a: e8 e1 f3 ff ff        call   <span class=\"token number\">8048830</span> <span class=\"token operator\">&lt;</span>puts@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 804944f: c7 <span class=\"token number\">04</span> <span class=\"token number\">24</span> 2c a5 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a52c</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> <span class=\"token number\">8049456</span>: e8 d5 f3 ff ff        call   <span class=\"token number\">8048830</span> <span class=\"token operator\">&lt;</span>puts@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 804945b: e8 <span class=\"token number\">81</span> fb ff ff        call   8048fe1 <span class=\"token operator\">&lt;</span>secret_phase<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> <span class=\"token number\">8049460</span>: c7 <span class=\"token number\">04</span> <span class=\"token number\">24</span> <span class=\"token number\">64</span> a5 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a564</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"34\"></td><td><pre> <span class=\"token number\">8049467</span>: e8 c4 f3 ff ff        call   <span class=\"token number\">8048830</span> <span class=\"token operator\">&lt;</span>puts@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 804946c: c9                    leave</pre></td></tr><tr><td data-num=\"36\"></td><td><pre> <span class=\"token number\">804946d</span>: c3                    ret</pre></td></tr></table></figure><p>最后的最后就是隐藏关卡 <code>secret_phase</code> ，但我们首先要找到进入 <code>secret_phase</code>  的方法。<br />\n不难发现，汇编代码中，只有在 <code>phase_defused</code>  调用了 <code>secret_phase</code> 。<br />\n分析汇编代码，可以发现主要是在 <code>sscanf</code>  时，从 <code>0x804c4f0</code>  的字符串中按照 <code>0x804a4f3</code>  的格式读取数值，如果返回值为 3，同时输入的字符串与 <code>0x804a4fc</code>  的字符串相等，则进入 <code>secret_phase</code> 。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804c4f0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804c4f0</span> <span class=\"token operator\">&lt;</span>input_strings<span class=\"token operator\">+</span><span class=\"token number\">240</span><span class=\"token operator\">></span>:  <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804a4f3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0x804a4f3</span>:      <span class=\"token string\">\"%d %d %s\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804a4fc</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0x804a4fc</span>:      <span class=\"token string\">\"DrEvil\"</span></pre></td></tr></table></figure><p>而形如 <code>&quot;%d %d %s&quot;</code>  的输入我们只在关卡 3 与关卡 4 中输入过，所以我们主要要找到 <code>0x804c4f0</code>  处对应的输入，我尝试在 3、4 中皆输入 <code>DrEvil</code> 。</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>256s <span class=\"token number\">0x804c400</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804c400</span> <span class=\"token operator\">&lt;</span>input_strings<span class=\"token operator\">></span>:      <span class=\"token string\">\"I am the mayor. I can do anything I want.\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0x804c450</span> <span class=\"token operator\">&lt;</span>input_strings<span class=\"token operator\">+</span><span class=\"token number\">80</span><span class=\"token operator\">></span>:   <span class=\"token string\">\"0 1 1 2 3 5\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0x804c4a0</span> <span class=\"token operator\">&lt;</span>input_strings<span class=\"token operator\">+</span><span class=\"token number\">160</span><span class=\"token operator\">></span>:  <span class=\"token string\">\"6 888 DrEvil\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0x804c4f0</span> <span class=\"token operator\">&lt;</span>input_strings<span class=\"token operator\">+</span><span class=\"token number\">240</span><span class=\"token operator\">></span>:  <span class=\"token string\">\"66 2 DrEvil\"</span></pre></td></tr></table></figure><p>可以发现， <code>0x804c4f0</code>  对应的是第四关的输入。<br />\n因此我们只需要在第四关的答案中添加 <code>DrEvil</code>  即可进入 <code>secret_phase</code> 。</p>\n<h1 id=\"secret_phase\"><a class=\"anchor\" href=\"#secret_phase\">#</a> secret_phase</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048fe1 <span class=\"token operator\">&lt;</span>secret_phase<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048fe1: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048fe2: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048fe4: <span class=\"token number\">83</span> ec <span class=\"token number\">28</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x28</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048fe7: e8 9a <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   <span class=\"token number\">8049286</span> <span class=\"token operator\">&lt;</span>read_line<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048fec: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048fef: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048ff2: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048ff5: e8 d6 f8 ff ff        call   80488d0 <span class=\"token operator\">&lt;</span>atoi@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048ffa: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048ffd: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f0 <span class=\"token number\">00</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token number\">8049001</span>: 7e <span class=\"token number\">09</span>                 jle    804900c <span class=\"token operator\">&lt;</span>secret_phase<span class=\"token operator\">+</span><span class=\"token number\">0x2b</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token number\">8049003</span>: <span class=\"token number\">81</span> <span class=\"token number\">7d</span> f0 e9 <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x3e9</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 804900a: 7e <span class=\"token number\">05</span>                 jle    <span class=\"token number\">8049011</span> <span class=\"token operator\">&lt;</span>secret_phase<span class=\"token operator\">+</span><span class=\"token number\">0x30</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 804900c: e8 ac <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">8049011</span>: 8b <span class=\"token number\">45</span> f0              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token number\">8049014</span>: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token number\">8049018</span>: c7 <span class=\"token number\">04</span> <span class=\"token number\">24</span> <span class=\"token number\">98</span> c1 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804c198</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 804901f: e8 5a ff ff ff        call   8048f7e <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token number\">8049024</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> ec              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token number\">8049027</span>: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> ec <span class=\"token number\">07</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x7</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 804902b: <span class=\"token number\">74</span> <span class=\"token number\">05</span>                 je     <span class=\"token number\">8049032</span> <span class=\"token operator\">&lt;</span>secret_phase<span class=\"token operator\">+</span><span class=\"token number\">0x51</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token number\">804902d</span>: e8 8b <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token number\">8049032</span>: c7 <span class=\"token number\">04</span> <span class=\"token number\">24</span> ac a3 <span class=\"token number\">04</span> <span class=\"token number\">08</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a3ac</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token number\">8049039</span>: e8 f2 f7 ff ff        call   <span class=\"token number\">8048830</span> <span class=\"token operator\">&lt;</span>puts@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 804903e: e8 a4 <span class=\"token number\">03</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   <span class=\"token number\">80493e7</span> <span class=\"token operator\">&lt;</span>phase_defused<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token number\">8049043</span>: c9                    leave</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token number\">8049044</span>: c3                    ret</pre></td></tr></table></figure><p>在该函数中，它先调用 <code>read_line</code>  函数获取一行输入。调用 <code>atoi@plt</code>  函数，将读取的一行输入转换为整数。然后检查该整数是否满足 <code>0&lt;x&lt;=1001</code> ，如果不是，则调用 <code>explode_bomb</code>  函数，炸弹爆炸。<br />\n接下来，调用 <code>fun7</code>  函数，将地址 <code>0x804c198</code>  作为第一个参数，输入的整数作为第二个参数，将 <code>fun7</code>  函数的返回值与 7 进行比较。如果不相等，则炸弹爆炸。反之，成功拆除炸弹。</p>\n<p>所以我们要做的就是和关卡 4 类似，将重心转移至 <code>fun7</code>  中，刨析 <code>fun7</code>  的构造：</p>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>08048f7e <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 8048f7e: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 8048f7f: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 8048f81: <span class=\"token number\">83</span> ec <span class=\"token number\">18</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x18</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 8048f84: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> <span class=\"token number\">08</span> <span class=\"token number\">00</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 8048f88: <span class=\"token number\">75</span> <span class=\"token number\">07</span>                 jne    8048f91 <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">+</span><span class=\"token number\">0x13</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 8048f8a: b8 ff ff ff ff        mov    <span class=\"token operator\">$</span><span class=\"token number\">0xffffffff</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 8048f8f: eb 4e                 jmp    8048fdf <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">+</span><span class=\"token number\">0x61</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 8048f91: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 8048f94: 8b <span class=\"token number\">00</span>                 mov    (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 8048f96: 3b <span class=\"token number\">45</span> 0c              cmp    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 8048f99: 7e <span class=\"token number\">19</span>                 jle    8048fb4 <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">+</span><span class=\"token number\">0x36</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 8048f9b: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 8048f9e: 8b <span class=\"token number\">40</span> <span class=\"token number\">04</span>              mov    <span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> 8048fa1: 8b <span class=\"token number\">55</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> 8048fa4: <span class=\"token number\">89</span> <span class=\"token number\">54</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 8048fa8: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 8048fab: e8 ce ff ff ff        call   8048f7e <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 8048fb0: <span class=\"token number\">01</span> c0                 add    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 8048fb2: eb 2b                 jmp    8048fdf <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">+</span><span class=\"token number\">0x61</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 8048fb4: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 8048fb7: 8b <span class=\"token number\">00</span>                 mov    (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> 8048fb9: 3b <span class=\"token number\">45</span> 0c              cmp    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> 8048fbc: <span class=\"token number\">75</span> <span class=\"token number\">07</span>                 jne    8048fc5 <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">+</span><span class=\"token number\">0x47</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 8048fbe: b8 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        mov    <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 8048fc3: eb 1a                 jmp    8048fdf <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">+</span><span class=\"token number\">0x61</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> 8048fc5: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 8048fc8: 8b <span class=\"token number\">40</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 8048fcb: 8b <span class=\"token number\">55</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 8048fce: <span class=\"token number\">89</span> <span class=\"token number\">54</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 8048fd2: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 8048fd5: e8 a4 ff ff ff        call   8048f7e <span class=\"token operator\">&lt;</span>fun7<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> 8048fda: <span class=\"token number\">01</span> c0                 add    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 8048fdc: <span class=\"token number\">83</span> c0 <span class=\"token number\">01</span>              add    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 8048fdf: c9                    leave</pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 8048fe0: c3                    ret</pre></td></tr></table></figure><p>观察输入的第一个参数 <code>0x804c198</code>  周围的数据，我们发现其基本结构单元是：</p>\n<ol>\n<li>一个数值</li>\n<li>一个地址</li>\n<li>一个地址</li>\n</ol>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>45wx <span class=\"token number\">0x804c0f0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804c0f0</span> <span class=\"token operator\">&lt;</span>n48<span class=\"token operator\">></span>:        <span class=\"token number\">0x000003e9</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x0000002f</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0x804c100</span> <span class=\"token operator\">&lt;</span>n46<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000014</span>      <span class=\"token number\">0x00000000</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">0x804c110</span> <span class=\"token operator\">&lt;</span>n43<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000007</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000000</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">0x804c120</span> <span class=\"token operator\">&lt;</span>n44<span class=\"token operator\">></span>:        <span class=\"token number\">0x00000023</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000063</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">0x804c130</span> <span class=\"token operator\">&lt;</span>n47<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000001</span>      <span class=\"token number\">0x00000000</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">0x804c140</span> <span class=\"token operator\">&lt;</span>n41<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000028</span>      <span class=\"token number\">0x00000000</span>      <span class=\"token number\">0x00000000</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">0x804c150</span> <span class=\"token operator\">&lt;</span>n34<span class=\"token operator\">></span>:        <span class=\"token number\">0x0000006b</span>      <span class=\"token number\">0x0804c12c</span>      <span class=\"token number\">0x0804c0f0</span>      <span class=\"token number\">0x00000006</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">0x804c160</span> <span class=\"token operator\">&lt;</span>n31<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x0804c138</span>      <span class=\"token number\">0x0804c114</span>      <span class=\"token number\">0x0000002d</span>      <span class=\"token number\">0x0804c144</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">0x804c170</span> <span class=\"token operator\">&lt;</span>n33<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x0804c0fc</span>      <span class=\"token number\">0x00000016</span>      <span class=\"token number\">0x0804c108</span>      <span class=\"token number\">0x0804c120</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">0x804c180</span> <span class=\"token operator\">&lt;</span>n22<span class=\"token operator\">></span>:        <span class=\"token number\">0x00000032</span>      <span class=\"token number\">0x0804c168</span>      <span class=\"token number\">0x0804c150</span>      <span class=\"token number\">0x00000008</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">0x804c190</span> <span class=\"token operator\">&lt;</span>n21<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">></span>:      <span class=\"token number\">0x0804c15c</span>      <span class=\"token number\">0x0804c174</span>      <span class=\"token number\">0x00000024</span>      <span class=\"token number\">0x0804c18c</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">0x804c1a0</span> <span class=\"token operator\">&lt;</span>n1<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">></span>:       <span class=\"token number\">0x0804c180</span></pre></td></tr></table></figure><p>这种结构很像我们在数据结构课程中学过的二叉树，我们尝试把这颗树画出来：</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/1eu74OYHViIUsyv.png\" alt=\"\" /></p>\n<p>在知道了第一个参数输入的是二叉树的头节点时，我们接下来对于 <code>fun7</code>  所做的事也就有了更加明确的认知。<br />\n <code>fun7</code>  同样是一个递归函数，该函数接受一个指向二叉树节点的指针和一个整数作为参数，并返回一个整数值。<br />\n如果节点指针为 NULL，则函数返回 - 1。<br />\n否则，它将节点的值与第二个参数进行比较。<br />\n如果节点的值大于第二个参数，则函数递归调用自身，将当前节点的左子节点和第二个参数作为新的参数，并将其返回值乘以 2 作为新的返回值返回。<br />\n如果节点的值等于第二个参数，则函数返回 0。<br />\n否则，函数递归调用自身，将该节点的右子节点和第二个参数作为新参数，并将返回值乘以 2 再加 1 作为新的返回值返回。</p>\n<p>因此 <code>fun7</code>  可以抽象为以下的式子：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mi>u</mi><mi>n</mi><mn>7</mn><mo stretchy=\"false\">(</mo><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>if </mtext><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>=</mo><mi>N</mi><mi>U</mi><mi>L</mi><mi>L</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mo>×</mo><mi>f</mi><mi>u</mi><mi>n</mi><mn>7</mn><mo stretchy=\"false\">(</mo><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi mathvariant=\"normal\">.</mi><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>if </mtext><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>&gt;</mo><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>if </mtext><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>2</mn><mo>×</mo><mi>f</mi><mi>u</mi><mi>n</mi><mn>7</mn><mo stretchy=\"false\">(</mo><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi mathvariant=\"normal\">.</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>if </mtext><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>&lt;</mo><mi>x</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\"> fun7(node, x) =\n    \\begin{cases}\n    -1 &amp; \\text{if } node = NULL \\\\\n    2 \\times fun7(node.left, x) &amp; \\text{if } node.value &gt; x \\\\\n    0 &amp; \\text{if } node.value = x \\\\\n    2 \\times fun7(node.right, x) + 1 &amp; \\text{if } node.value &lt; x\n\\end{cases} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">7</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.76em;vertical-align:-2.63em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-1.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.592em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.8889em\" height=\"0.916em\" style=\"width:0.8889em\" viewBox=\"0 0 888.89 916\" preserveAspectRatio=\"xMinYMin\"><path d=\"M384 0 H504 V916 H384z M384 0 H504 V916 H384z\"/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.8889em\" height=\"0.916em\" style=\"width:0.8889em\" viewBox=\"0 0 888.89 916\" preserveAspectRatio=\"xMinYMin\"><path d=\"M384 0 H504 V916 H384z M384 0 H504 V916 H384z\"/></svg></span></span><span style=\"top:-5.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.13em;\"><span style=\"top:-5.13em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">7</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-0.81em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">7</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.63em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.13em;\"><span style=\"top:-5.13em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">if </span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\">ULL</span></span></span><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">if </span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">if </span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-0.81em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">if </span></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.63em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>我们需要的返回值是 7。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>7</mn><mo>=</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo>∗</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">7=(((0 \\ast 2+1) \\ast 2+1) \\ast 2+1) \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(((</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<table>\n<thead>\n<tr></tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">*2+1</td>\n<td style=\"text-align:center\">right</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">*2+1</td>\n<td style=\"text-align:center\">right</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">*2+1</td>\n<td style=\"text-align:center\">right</td>\n</tr>\n</tbody>\n</table>\n<p>再根据我们之前画出的二叉树，可以得到我们所需要的之是 1001。<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2023/05/13/le6MFcYXUhLuZjQ.png\" alt=\"\" /></p>\n<h1 id=\"read_six_number\"><a class=\"anchor\" href=\"#read_six_number\">#</a> read_six_number</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>080490c5 <span class=\"token operator\">&lt;</span>read_six_numbers<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 80490c5: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 80490c6: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> 80490c8: <span class=\"token number\">56</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">esi</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 80490c9: <span class=\"token number\">53</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 80490ca: <span class=\"token number\">83</span> ec <span class=\"token number\">30</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x30</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 80490cd: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> 80490d0: <span class=\"token number\">8d</span> <span class=\"token number\">70</span> <span class=\"token number\">14</span>              lea    <span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">esi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 80490d3: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 80490d6: <span class=\"token number\">8d</span> <span class=\"token number\">58</span> <span class=\"token number\">10</span>              lea    <span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 80490d9: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 80490dc: <span class=\"token number\">8d</span> <span class=\"token number\">48</span> 0c              lea    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">ecx</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> 80490df: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token number\">80490e2</span>: <span class=\"token number\">8d</span> <span class=\"token number\">50</span> <span class=\"token number\">08</span>              lea    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">80490e5</span>: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">80490e8</span>: <span class=\"token number\">83</span> c0 <span class=\"token number\">04</span>              add    <span class=\"token operator\">$</span><span class=\"token number\">0x4</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> 80490eb: <span class=\"token number\">89</span> <span class=\"token number\">74</span> <span class=\"token number\">24</span> 1c           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esi</span>,<span class=\"token number\">0x1c</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> 80490ef: <span class=\"token number\">89</span> 5c <span class=\"token number\">24</span> <span class=\"token number\">18</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span>,<span class=\"token number\">0x18</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 80490f3: <span class=\"token number\">89</span> 4c <span class=\"token number\">24</span> <span class=\"token number\">14</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">ecx</span>,<span class=\"token number\">0x14</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> 80490f7: <span class=\"token number\">89</span> <span class=\"token number\">54</span> <span class=\"token number\">24</span> <span class=\"token number\">10</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">edx</span>,<span class=\"token number\">0x10</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> 80490fb: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> 0c           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> 80490ff: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token number\">8049102</span>: <span class=\"token number\">89</span> <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">08</span>           mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token number\">8049106</span>: c7 <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">04</span> <span class=\"token number\">7d</span> a4 <span class=\"token number\">04</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x804a47d</span>,<span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token number\">804910d</span>: <span class=\"token number\">08</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 804910e: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token number\">8049111</span>: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token number\">8049114</span>: e8 <span class=\"token number\">77</span> f7 ff ff        call   <span class=\"token number\">8048890</span> <span class=\"token operator\">&lt;</span>__isoc99_sscanf@plt<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token number\">8049119</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 804911c: <span class=\"token number\">83</span> <span class=\"token number\">7d</span> f4 <span class=\"token number\">05</span>           cmpl   <span class=\"token operator\">$</span><span class=\"token number\">0x5</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> <span class=\"token number\">8049120</span>: 7f <span class=\"token number\">05</span>                 jg     <span class=\"token number\">8049127</span> <span class=\"token operator\">&lt;</span>read_six_numbers<span class=\"token operator\">+</span><span class=\"token number\">0x62</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token number\">8049122</span>: e8 <span class=\"token number\">96</span> <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        call   80493bd <span class=\"token operator\">&lt;</span>explode_bomb<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> <span class=\"token number\">8049127</span>: <span class=\"token number\">83</span> c4 <span class=\"token number\">30</span>              add    <span class=\"token operator\">$</span><span class=\"token number\">0x30</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 804912a: 5b                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 804912b: 5e                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">esi</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 804912c: <span class=\"token number\">5d</span>                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre> <span class=\"token number\">804912d</span>: c3                    ret</pre></td></tr></table></figure><figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(gdb) x <span class=\"token operator\">/</span>s <span class=\"token number\">0x804a47d</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">0x804a47d</span>:      <span class=\"token string\">\"%d %d %d %d %d %d\"</span></pre></td></tr></table></figure><p>该函数的作用是从标准输入中读取六个整数，调整栈指针为这些变量分配所需的空间，然后调用了 <code>__isoc99_sscanf@plt</code>  函数，与我们平常使用的 <code>sscanf</code>  相似， <code>0x804a47d</code>  地址所存放的就是格式字符串，最后，检查所调用函数返回值是否大于 5，若小于五则调用 <code>explode_bomb</code> ，炸弹直接爆炸。</p>\n<h1 id=\"string_length\"><a class=\"anchor\" href=\"#string_length\">#</a> string_length</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>0804912e <span class=\"token operator\">&lt;</span>string_length<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 804912e: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 804912f: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token number\">8049131</span>: <span class=\"token number\">83</span> ec <span class=\"token number\">10</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x10</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token number\">8049134</span>: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">8049137</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f8              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> 804913a: c7 <span class=\"token number\">45</span> fc <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>  movl   <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token number\">8049141</span>: eb <span class=\"token number\">08</span>                 jmp    804914b <span class=\"token operator\">&lt;</span>string_length<span class=\"token operator\">+</span><span class=\"token number\">0x1d</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token number\">8049143</span>: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f8 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">8049147</span>: <span class=\"token number\">83</span> <span class=\"token number\">45</span> fc <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> 804914b: 8b <span class=\"token number\">45</span> f8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> 804914e: 0f b6 <span class=\"token number\">00</span>              movzbl (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token number\">8049151</span>: <span class=\"token number\">84</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">al</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">al</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token number\">8049153</span>: <span class=\"token number\">75</span> ee                 jne    <span class=\"token number\">8049143</span> <span class=\"token operator\">&lt;</span>string_length<span class=\"token operator\">+</span><span class=\"token number\">0x15</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">8049155</span>: 8b <span class=\"token number\">45</span> fc              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x4</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">8049158</span>: c9                    leave</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token number\">8049159</span>: c3                    ret</pre></td></tr></table></figure><p>是一个简单的循环结构，每次迭代都会检查字符串中的下一个字符是否为 <code>'\\0'</code> （字符串末尾）若不是，则递增字符串指针和长度，直到碰到 <code>'\\0'</code> ，退出循环并返回长度。</p>\n<h1 id=\"string_not_equal\"><a class=\"anchor\" href=\"#string_not_equal\">#</a> string_not_equal</h1>\n<figure class=\"highlight nasm\"><figcaption data-lang=\"NASM\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>0804915a <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">></span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> 804915a: <span class=\"token number\">55</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> 804915b: <span class=\"token number\">89</span> e5                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token number\">804915d</span>: <span class=\"token number\">53</span>                    push   <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> 804915e: <span class=\"token number\">83</span> ec <span class=\"token number\">14</span>              sub    <span class=\"token operator\">$</span><span class=\"token number\">0x14</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">8049161</span>: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token number\">8049164</span>: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token number\">8049167</span>: e8 c2 ff ff ff        call   804912e <span class=\"token operator\">&lt;</span>string_length<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> 804916c: <span class=\"token number\">89</span> c3                 mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> 804916e: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token number\">8049171</span>: <span class=\"token number\">89</span> <span class=\"token number\">04</span> <span class=\"token number\">24</span>              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,(<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span>)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token number\">8049174</span>: e8 b5 ff ff ff        call   804912e <span class=\"token operator\">&lt;</span>string_length<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token number\">8049179</span>: <span class=\"token number\">39</span> c3                 cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> 804917b: <span class=\"token number\">74</span> <span class=\"token number\">07</span>                 je     <span class=\"token number\">8049184</span> <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">+</span><span class=\"token number\">0x2a</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">804917d</span>: b8 <span class=\"token number\">01</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        mov    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">8049182</span>: eb 3c                 jmp    80491c0 <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">+</span><span class=\"token number\">0x66</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token number\">8049184</span>: 8b <span class=\"token number\">45</span> <span class=\"token number\">08</span>              mov    <span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token number\">8049187</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f8              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> 804918a: 8b <span class=\"token number\">45</span> 0c              mov    <span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token number\">804918d</span>: <span class=\"token number\">89</span> <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token number\">8049190</span>: eb 1f                 jmp    80491b1 <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">+</span><span class=\"token number\">0x57</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> <span class=\"token number\">8049192</span>: 8b <span class=\"token number\">45</span> f8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token number\">8049195</span>: 0f b6 <span class=\"token number\">10</span>              movzbl (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">edx</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token number\">8049198</span>: 8b <span class=\"token number\">45</span> f4              mov    <span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> 804919b: 0f b6 <span class=\"token number\">00</span>              movzbl (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> 804919e: <span class=\"token number\">38</span> c2                 cmp    <span class=\"token operator\">%</span><span class=\"token register variable\">al</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">dl</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> 80491a0: <span class=\"token number\">74</span> <span class=\"token number\">07</span>                 je     80491a9 <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">+</span><span class=\"token number\">0x4f</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> 80491a2: b8 <span class=\"token number\">01</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        mov    <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> 80491a7: eb <span class=\"token number\">17</span>                 jmp    80491c0 <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">+</span><span class=\"token number\">0x66</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> 80491a9: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f8 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> 80491ad: <span class=\"token number\">83</span> <span class=\"token number\">45</span> f4 <span class=\"token number\">01</span>           addl   <span class=\"token operator\">$</span><span class=\"token number\">0x1</span>,<span class=\"token operator\">-</span><span class=\"token number\">0xc</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> 80491b1: 8b <span class=\"token number\">45</span> f8              mov    <span class=\"token operator\">-</span><span class=\"token number\">0x8</span>(<span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> 80491b4: 0f b6 <span class=\"token number\">00</span>              movzbl (<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span>),<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> 80491b7: <span class=\"token number\">84</span> c0                 test   <span class=\"token operator\">%</span><span class=\"token register variable\">al</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">al</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> 80491b9: <span class=\"token number\">75</span> d7                 jne    <span class=\"token number\">8049192</span> <span class=\"token operator\">&lt;</span>strings_not_equal<span class=\"token operator\">+</span><span class=\"token number\">0x38</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> 80491bb: b8 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>        mov    <span class=\"token operator\">$</span><span class=\"token number\">0x0</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">eax</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre> 80491c0: <span class=\"token number\">83</span> c4 <span class=\"token number\">14</span>              add    <span class=\"token operator\">$</span><span class=\"token number\">0x14</span>,<span class=\"token operator\">%</span><span class=\"token register variable\">esp</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre> 80491c3: 5b                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">ebx</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> 80491c4: <span class=\"token number\">5d</span>                    pop    <span class=\"token operator\">%</span><span class=\"token register variable\">ebp</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> 80491c5: c3                    ret</pre></td></tr></table></figure><p>首先对于输入的两个字符串，调用 <code>string_length</code>  函数，返回两个字符串的长度，若长度不相等则直接返回 1（不相等），如果长度相等，则逐个比较两个字符串中的字符。如果发现不同的字符，则返回 1。如果所有字符都相同，则返回 0。</p>\n",
            "tags": [
                "计算机科学",
                "Reverse-Engineering",
                "Reverse-Engineering",
                "Assembly"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/deeplearning/papersnotes/alexnet/",
            "url": "https://murlors.netlify.app/computer-science/deeplearning/papersnotes/alexnet/",
            "title": "AlexNet论文笔记",
            "date_published": "2022-12-01T05:00:00.000Z",
            "content_html": "<h2 id=\"abstract\"><a class=\"anchor\" href=\"#abstract\">#</a> Abstract</h2>\n<p>60,000,000 参数<br />\n 650,000 神经元<br />\n五层卷积层  删除任何一层都会导致性能下降<br />\n三层全连接层 softmax 1,000<br />\n 全连接层加入 Dropout 层防止过拟合 (effective)<br />\n ImageNet 包含超过 1500 万张标记的高分辨率图像，涵盖 22000 多个类别。<br />\nCNN 相较 FNN (standard feedforward neural networks) 参数少，效果相差不大，易训练<br />\n训练了 90epoch</p>\n<p>CNN 需要指定输入维度，降低分辨率至 256x256 (较短一侧长度缩至 256，保留中间部分)<br />\n 同时在每个像素中都减去训练集对应像素均值 (凸显差异)</p>\n<h2 id=\"relu-nonlinearity\"><a class=\"anchor\" href=\"#relu-nonlinearity\">#</a> ReLU Nonlinearity</h2>\n<p>non-saturating<br />\n 采用 ReLU 相较 Sigmoid 和 Tanh 速度快几倍</p>\n<blockquote>\n<p>ReLU 更易训练，加速收敛</p>\n</blockquote>\n<h2 id=\"training-on-multiple-gpus\"><a class=\"anchor\" href=\"#training-on-multiple-gpus\">#</a> Training on Multiple GPUs</h2>\n<p>多卡训练以训练大网络<br />\n gpu 只在某些层进行通信分组卷积，优化其通信量与计算量占比</p>\n<h2 id=\"local-response-normalizationx\"><a class=\"anchor\" href=\"#local-response-normalizationx\">#</a> Local Response Normalization(x)</h2>\n<p>有助于泛化<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>b</mi><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow><mi>i</mi></msubsup><mo>=</mo><msubsup><mi>a</mi><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow><mi>i</mi></msubsup><mi mathvariant=\"normal\">/</mi><msup><mrow><mo fence=\"true\">(</mo><mi>k</mi><mo>+</mo><mi>α</mi><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>i</mi><mo>−</mo><mi>n</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mrow><mo fence=\"true\">(</mo><msubsup><mi>a</mi><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow><mi>j</mi></msubsup><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup><mo fence=\"true\">)</mo></mrow><mi>β</mi></msup></mrow><annotation encoding=\"application/x-tex\">b_{x, y}^{i}=a_{x, y}^{i} /\\left(k+\\alpha \\sum_{j=\\max (0, i-n / 2)}^{\\min (N-1, i+n / 2)}\\left(a_{x, y}^{j}\\right)^{2}\\right)^{\\beta}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2078em;vertical-align:-0.3831em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.039em;vertical-align:-0.65em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3598em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">a</span><span class=\"mtight\">x</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mtight\">/2</span><span class=\"mclose mtight\">)</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">i</span><span class=\"mtight\">n</span></span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mtight\">/2</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5152em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.054em;\"><span style=\"top:-3.3029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.389em;\"><span style=\"top:-3.6029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05278em;\">β</span></span></span></span></span></span></span></span></span></span></span></span><br />\n 更类似于亮度归一化 (由于没有减去平均值，因而非对比度归一化)<br />\n 归一化的意义是什么 (?)</p>\n<blockquote>\n<p>LRN 的直观解释就是，在第 i 个特征图上的 (x,y) 处的神经元的值，通过其邻近的 n 个特征图上，同一位置的值平方和的相关运算，最后得到的值作为该特征图上，对应位置的新值。<br />\n可想而知，其计算量不小！后面的研究者也发现，LRN 并无实际作用，反而增加不少的计算量，因此一般都不再使用。<br />\n摘自知乎</p>\n</blockquote>\n<h2 id=\"overlapping-pooling\"><a class=\"anchor\" href=\"#overlapping-pooling\">#</a> Overlapping Pooling</h2>\n<p>Pooling 重叠，重复利用某些像素<br />\n更难过拟合</p>\n<h2 id=\"overall-architecture\"><a class=\"anchor\" href=\"#overall-architecture\">#</a> Overall Architecture</h2>\n<p>网络结构</p>\n<blockquote>\n<p>The first convolutional layer filters the 224×224×3 input image with 96 kernels of size 11×11×3 with a stride of 4 pixels (this is the distance between the receptive field centers of neighboring The second convolutional layer takes as input the (response-normalized and pooled) output of the first convolutional layer and filters it with 256 kernels of size 5 × 5 × 48. The third, fourth, and fifth convolutional layers are connected to one another without any intervening pooling or normalization layers. The third convolutional layer has 384 kernels of size 3 × 3 × 256 connected to the (normalized, pooled) outputs of the second convolutional layer. The fourth convolutional layer has 384 kernels of size 3 × 3 × 192 , and the fifth convolutional layer has 256 kernels of size 3 × 3 × 192. The fully-connected layers have 4096 neurons each.</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/12/01/N5ZViGj36wM9m2H.png\" alt=\"\" /></p>\n<h2 id=\"reducing-overfitting\"><a class=\"anchor\" href=\"#reducing-overfitting\">#</a> Reducing Overfitting</h2>\n<ul>\n<li>\n<p>Data Augmentation 数据增强<br />\n～加大数据集</p>\n<ul>\n<li>image translations and horizontal reflections.<br />\n 训练集规模扩大 2048 倍 (?)</li>\n</ul>\n<blockquote>\n<p>horizontal reflections 水平翻转<br />\n这边的操作就是先将原图水平翻转，之后在原图及翻转后的图中取样 (四角和中间) 227x227 像素<br />\n不过感觉这样其实也增强不了多少数据</p>\n</blockquote>\n<ul>\n<li>改变 RGB 通道强度 PCA (解释有点不知所云，是不是与原图相近 (RGB 通道强度改变少的) 的保留更多？)</li>\n</ul>\n</li>\n<li>\n<p>Dropout 层</p>\n<ul>\n<li>probability=0.5 (? 太大了)</li>\n<li>在前两个全连接层中使用</li>\n<li>导致收敛时间增大 (~2 倍)，但是不容易过拟合</li>\n</ul>\n</li>\n</ul>\n<p>验证集错误率在当前学习率停止改善时，学习率除以 10。<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>:</mo><mo>=</mo><mn>0.9</mn><mo>⋅</mo><msub><mi>v</mi><mi>i</mi></msub><mo>−</mo><mn>0.0005</mn><mo>⋅</mo><mi>ϵ</mi><mo>⋅</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><mi>ϵ</mi><mo>⋅</mo><msub><mrow><mo fence=\"true\">⟨</mo><msub><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac><mo fence=\"true\">∣</mo></mrow><msub><mi>w</mi><mi>i</mi></msub></msub><mo fence=\"true\">⟩</mo></mrow><msub><mi>D</mi><mi>i</mi></msub></msub></mrow><annotation encoding=\"application/x-tex\">v_{i+1}:=0.9 \\cdot v_{i}-0.0005 \\cdot \\epsilon \\cdot w_{i}-\\epsilon \\cdot\\left\\langle\\left.\\frac{\\partial L}{\\partial w}\\right|_{w_{i}}\\right\\rangle_{D_{i}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.9</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.0005</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">ϵ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.9498em;vertical-align:-0.7998em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⟨</span></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-2.85em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span style=\"width:0.333em;height:1.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.333em\" height=\"1.200em\" viewBox=\"0 0 333 1200\"><path d=\"M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.0983em;\"><span style=\"top:-2.3003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4998em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">⟩</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.2214em;\"><span style=\"top:-2.0003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7998em;\"><span></span></span></span></span></span></span></span></span></span><br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>:</mo><mo>=</mo><msub><mi>w</mi><mi>i</mi></msub><mo>+</mo><msub><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">w_{i+1}:=w_{i}+v_{i+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>i 是迭代数，v 是 momentum，ε 是学习率，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mo fence=\"true\">⟨</mo><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac><mo fence=\"true\">∣</mo></mrow><mrow><mi>w</mi><mi>i</mi></mrow><mo fence=\"true\">⟩</mo></mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\left\\langle\\left.\\frac{\\partial L}{\\partial w}\\right|{w{i}}\\right\\rangle{D_{i}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2301em;vertical-align:-0.35em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⟨</span></span><span class=\"minner\"><span class=\"mopen nulldelimiter\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-2.85em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span style=\"width:0.333em;height:1.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.333em\" height=\"1.200em\" viewBox=\"0 0 333 1200\"><path d=\"M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">⟩</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 是目标函数对 w 在 wi 上的第 i 批微分 Di 的平均。</p>\n<h2 id=\"思考\"><a class=\"anchor\" href=\"#思考\">#</a> 思考</h2>\n<p>训练大网络要防止过拟合，Dropout 层不可或缺，训练集的大小很重要，数据增强很重要。<br />\nReLU 替代 Sigmoid、Tanh 加速收敛，减少耗时。<br />\n在之前写的 CNN 十分类网络中再考虑将数据集进行增强，且调大 Dropout 的 probability。</p>\n",
            "tags": [
                "计算机科学",
                "DeepLearing",
                "论文笔记",
                "DeepLearing",
                "笔记",
                "CNN"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/xiaowenxin-gallery/use-tutorial-brief/",
            "url": "https://murlors.netlify.app/computer-science/note/xiaowenxin-gallery/use-tutorial-brief/",
            "title": "小温新图库使用教程(简)",
            "date_published": "2022-09-25T16:10:00.000Z",
            "content_html": "<blockquote>\n<p>小温新图库网址：<a href=\"http://10.10.8.24\">10.10.8.24</a><br />\n 仅可在学校内网中访问（宿舍宽带、i-WZU，WZU-free...）</p>\n</blockquote>\n<h2 id=\"注册账号\"><a class=\"anchor\" href=\"#注册账号\">#</a> 注册账号</h2>\n<p>点击注册账号<a href=\"http://10.10.8.24/register.php\">注册</a><br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/26/WOsv7ljL4UKGB6Z.png\" alt=\"\" /><br />\n按照要求输入信息 <strong>注意取消选择下面的选框</strong><br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/26/MrjsYX5JE92bUmg.png\" alt=\"\" /></p>\n<h2 id=\"上传照片\"><a class=\"anchor\" href=\"#上传照片\">#</a> 上传照片</h2>\n<blockquote>\n<p>须创建账号并登录才可进行照片上传</p>\n</blockquote>\n<p>登录后，选择顶栏中的上传图片<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/26/H5ewdcgsPvi29hE.png\" alt=\"\" /></p>\n<h3 id=\"创建相册后上传\"><a class=\"anchor\" href=\"#创建相册后上传\">#</a> <strong>创建相册后上传</strong></h3>\n<p>点击创建新相册，父相册按 <code>本次所拍摄的主题</code> 进行选择，并创建以 <code>拍摄人姓名</code> 为相册名的子相册<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/26/LWIFvGo84HTkzJb.png\" alt=\"\" /><br />\n之后就可以进行照片上传啦<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/26/uhFnP1Yo9EKrcIO.png\" alt=\"\" /></p>\n<h3 id=\"已有相册上传\"><a class=\"anchor\" href=\"#已有相册上传\">#</a> <strong>已有相册上传</strong></h3>\n<p>若补传图片只需要选中之前自己创建的相册即可。</p>\n<blockquote>\n<p>相册路径规范 ： <code>年份</code>  +  <code>拍摄主题</code>  +  <code>拍摄人</code></p>\n</blockquote>\n<h2 id=\"下载照片\"><a class=\"anchor\" href=\"#下载照片\">#</a> 下载照片</h2>\n<blockquote>\n<p><strong>须登录账号方可下载</strong></p>\n</blockquote>\n<p>先进入到需要下载的相册当中<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/10/09/iNSkqn3QwpUfP1u.png\" alt=\"\" /><br />\n点击图中的按钮即可下载</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "小温新图库",
                "教程",
                "Gallery"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/linux/centos/virtualbox-ssh-connection-configuration/",
            "url": "https://murlors.netlify.app/computer-science/linux/centos/virtualbox-ssh-connection-configuration/",
            "title": "CentOS7 VirtualBox SSH连接配置",
            "date_published": "2022-09-13T14:30:00.000Z",
            "content_html": "<blockquote>\n<p>由于 CentOS 在 VirtualBox 中经常出现无法使用与主机共享粘贴板<br />\n可以考虑使用 SSH 来替代</p>\n</blockquote>\n<h2 id=\"安装openssh-server\"><a class=\"anchor\" href=\"#安装openssh-server\">#</a> 安装 openssh-server</h2>\n<pre><code class=\"language-Shell\">sudo yum install openssh-server \n</code></pre>\n<h2 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h2>\n<pre><code class=\"language-Shell\">sudo vim /etc/ssh/sshd_config\n</code></pre>\n<p>找到 <code>Port 22</code>  解注释，去掉前面的 <code>#</code> <br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/13/QeTfLZXz4EMuGrj.png\" alt=\"\" /><br />\n找到 <code>PermitRootLogin</code> ，解注释，并且确认是 <code>yes</code> <br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/13/TdpYOAg73sDru62.png\" alt=\"\" /></p>\n<h2 id=\"开启ssh-并设为启动项\"><a class=\"anchor\" href=\"#开启ssh-并设为启动项\">#</a> 开启 SSH 并设为启动项</h2>\n<pre><code class=\"language-Shell\">systemctl start sshd.service\nsystemctl enable sshd.service\n</code></pre>\n<h2 id=\"虚拟机端口映射\"><a class=\"anchor\" href=\"#虚拟机端口映射\">#</a> 虚拟机端口映射</h2>\n<p>VirtualBox &gt; 设备 &gt; 网络 &gt; 高级 &gt; 端口转发<br />\n主机端口自定义<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/09/13/lpjP4mLwuMJaefE.png\" alt=\"\" /><br />\n子系统 IP 通过 <code>ifconfig</code>  获取</p>\n<p>其余按照图示配置即可</p>\n<h2 id=\"ssh连接\"><a class=\"anchor\" href=\"#ssh连接\">#</a> SSH 连接</h2>\n<p>在主机的终端中运行</p>\n<pre><code class=\"language-Shell\">ssh -p 2222 stu@127.0.0.1\n</code></pre>\n<p><code>2222</code>  为端口名称<br />\n <code>stu</code>  为用户名<br />\n视情况进行更改</p>\n<h2 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>之后如果还需要建立 SSH 连接，先打开虚拟机，然后在主机终端中输入上面那一串内容即可</p>\n",
            "tags": [
                "计算机科学",
                "Linux",
                "CentOS",
                "VirtualBox",
                "CentOS",
                "Linux",
                "SSH"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/cpp/course-design/doodle-jump/",
            "url": "https://murlors.netlify.app/computer-science/cpp/course-design/doodle-jump/",
            "title": "大一课程设计期末大作业Doodle Jump",
            "date_published": "2022-06-02T14:00:00.000Z",
            "content_html": "<blockquote>\n<p>温州大学 数据科学与大数据技术 21 届 第二学期 程序设计课程设计 期末大作业</p>\n</blockquote>\n<p>这是一个使用  <code>C++</code>  构建的推箱子游戏，游戏内容如下：</p>\n<h1 id=\"项目介绍\"><a class=\"anchor\" href=\"#项目介绍\">#</a> 项目介绍</h1>\n<h2 id=\"项目背景\"><a class=\"anchor\" href=\"#项目背景\">#</a> 项目背景</h2>\n<p>最开始我选择制作的游戏是俄罗斯方块，不过感觉俄罗斯方块所涉及到的方面还是太少了，并且难以添加一些新的功能与玩法，于是便决定换个游戏制作。</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/DVe1Q7j38nbIkrK.png\" alt=\"Tetris\" /></p>\n<p>在试玩了网上的一些游戏后，我决定制作一款游戏 —— 涂鸦跳跃  <code>Doodle Jump</code> ，决定尝试面向对象编程，将游戏中的不同元素都分为各个对象进行编写。代码行数接近一千行，代码的可读性仍有待提高。</p>\n<h2 id=\"技术支持\"><a class=\"anchor\" href=\"#技术支持\">#</a> 技术支持</h2>\n<p>所使用的 IDE 是由 <code>royqh1979</code>  所编译的 <code>Dev C++</code> <br />\n 编译器版本是 <code>GCC 10.3.0</code></p>\n<p>程序代码部分使用了</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"fstream\"</span> <span class=\"token comment\">//C++ 文件处理库（用于游戏存档和得分记录）</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"map\"</span> <span class=\"token comment\">//C++ STL 利用红黑树存储键值对（得分记录）</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"thread\"</span> <span class=\"token comment\">//C++ STL 多线程支持（主要用于获取键盘以及鼠标操作）</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"iostream\"</span> <span class=\"token comment\">//C++ 标准输入输出库（仅在调试中使用）</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Logo.h\"</span> <span class=\"token comment\">// 图形库使用的是虞老师的 LogoC</span></span></pre></td></tr></table></figure><p>编译时加入了 <code>-lwinmm</code>  指令以实现播放声音的支持（调用 <code>mciSendString</code>  函数）</p>\n<h2 id=\"项目结构\"><a class=\"anchor\" href=\"#项目结构\">#</a> 项目结构</h2>\n<ul>\n<li><code>image</code> ：包含游戏的图片\n<ul>\n<li><code>Land</code> ：地板的图片</li>\n<li><code>System</code> ：各个界面的图片以及按钮的图片</li>\n<li><code>Theme</code> ：包含四个主题不同的背景和小人</li>\n<li><code>Welcome</code> ：开始界面相关图片</li>\n</ul>\n</li>\n<li><code>sounds</code> ：包含游戏中的声音</li>\n<li><code>DoodleJump.h</code> : 头文件包含函数的声明</li>\n<li><code>DoodleJump.cpp</code> : 对子文件的调用</li>\n<li><code>Land.cpp</code> : 包含 <code>Land</code>  类，与地块有关</li>\n<li><code>Player.cpp</code> : 包含 <code>Player</code>  类，与小人有关</li>\n<li><code>SaveData.cpp</code> : 包含 <code>SaveData</code>  类，存取存档</li>\n<li><code>Scene.cpp</code> : 包含 <code>Scene</code>  类，场景有关</li>\n<li><code>Welcome.cpp</code> : 包含 <code>Welcome</code>  类，欢迎界面</li>\n</ul>\n<h1 id=\"系统设计\"><a class=\"anchor\" href=\"#系统设计\">#</a> 系统设计</h1>\n<h2 id=\"四个宏定义\"><a class=\"anchor\" href=\"#四个宏定义\">#</a> 四个宏定义</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_Doodle_Jump_Width_</span> <span class=\"token expression\"><span class=\"token number\">500</span> </span><span class=\"token comment\">// 游戏窗口宽度</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_Doodle_Jump_Height_</span> <span class=\"token expression\"><span class=\"token number\">800</span> </span><span class=\"token comment\">// 游戏窗口高度</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_land_num_</span> <span class=\"token expression\"><span class=\"token number\">10</span> </span><span class=\"token comment\">// 游戏中所包含的最大地块数量</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_Gravity_</span> <span class=\"token expression\"><span class=\"token number\">0.15</span> </span><span class=\"token comment\">// 重力加速度</span></span></pre></td></tr></table></figure><h2 id=\"四种枚举类型\"><a class=\"anchor\" href=\"#四种枚举类型\">#</a> 四种枚举类型</h2>\n<p>程序使用了较多的枚举类型以提高代码可读性：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">InterfaceType</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 用于描述程序当前所在的界面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    I_welcome<span class=\"token punctuation\">,</span> I_rule1<span class=\"token punctuation\">,</span> I_rule2<span class=\"token punctuation\">,</span> I_rank<span class=\"token punctuation\">,</span> I_option<span class=\"token punctuation\">,</span> I_change_name<span class=\"token punctuation\">,</span> I_gamerun<span class=\"token punctuation\">,</span> I_gamepause<span class=\"token punctuation\">,</span> I_gameretry<span class=\"token punctuation\">,</span> I_gameover</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">DJTheme</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 游戏当前所用的主题名称</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Classic<span class=\"token punctuation\">,</span> Jungle<span class=\"token punctuation\">,</span> Underwater<span class=\"token punctuation\">,</span> Winter</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">PlayerStatus</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 玩家所操控的小人所处的状态</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    p_left<span class=\"token punctuation\">,</span> p_right<span class=\"token punctuation\">,</span> fly_left1<span class=\"token punctuation\">,</span> fly_right1<span class=\"token punctuation\">,</span> fly_left2<span class=\"token punctuation\">,</span> fly_right2<span class=\"token punctuation\">,</span> rocket_left<span class=\"token punctuation\">,</span> rocket_right</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">LandType</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//LandType：地块的类型</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    normal<span class=\"token punctuation\">,</span> fragile<span class=\"token punctuation\">,</span> broken<span class=\"token punctuation\">,</span> broken_over<span class=\"token punctuation\">,</span> mvland<span class=\"token punctuation\">,</span> landfly<span class=\"token punctuation\">,</span> landrocket<span class=\"token punctuation\">,</span> mvspring1<span class=\"token punctuation\">,</span> landspring1<span class=\"token punctuation\">,</span> mvspring2<span class=\"token punctuation\">,</span> landspring2</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"welcome类\"><a class=\"anchor\" href=\"#welcome类\">#</a> Welcome 类</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>IMAGE <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将图片存入该指针所指向的地址（按钮，各子界面图）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>InterfaceType interfacetype<span class=\"token punctuation\">;</span><span class=\"token comment\">// 当前界面类型 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DJtheme themetype<span class=\"token punctuation\">;</span><span class=\"token comment\">// 当前主题类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>string path<span class=\"token punctuation\">,</span> theme<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">;</span><span class=\"token comment\">// 路径；主题，玩家姓名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>thread p_mouseget<span class=\"token punctuation\">;</span><span class=\"token comment\">// 线程指针</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">bool</span> bgm<span class=\"token punctuation\">,</span> sound_effect<span class=\"token punctuation\">;</span><span class=\"token comment\">// 背景音乐，音效开关</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>multimap<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">,</span> sortcmp<span class=\"token operator\">></span> scorerank_map<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录排名的函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 构造函数，负责变量的初始化</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">rank_read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 读取排名</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">rank_save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 写入排名</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">change_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 改动玩家姓名</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">welcome_mouseget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 捕获开始界面的操作，通常在多线程调用</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main_interface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 开始界面循环函数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">draw_welcome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 欢迎界面的绘制</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show_rule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 规则界面</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show_rank</span><span class=\"token punctuation\">(</span>InterfaceType pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 排行榜界面</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show_option</span><span class=\"token punctuation\">(</span>InterfaceType pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置界面</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show_pauselabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 游戏暂停界面</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show_gameover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 游戏结束界面</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">change_theme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 更改主题函数，调用各类变换主题子函数</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">draw_jump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 开始界面跳动小人</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">pauseget_mouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 捕获暂停界面的操作，多线程中调用</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">game_run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 游戏运行循环函数</span></pre></td></tr></table></figure><h2 id=\"savedata类\"><a class=\"anchor\" href=\"#savedata类\">#</a> SaveData 类</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">game_save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 游戏存档</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">game_load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 游戏继续</span></pre></td></tr></table></figure><h2 id=\"scene类\"><a class=\"anchor\" href=\"#scene类\">#</a> Scene 类</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>IMAGE <span class=\"token operator\">*</span> im_bk<span class=\"token punctuation\">,</span> im_basicline<span class=\"token punctuation\">;</span><span class=\"token comment\">// 游戏场景背景图</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> direct<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录接收的按键</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">Scene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 构造函数，负责初始化</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">change_theme</span><span class=\"token punctuation\">(</span>string theme<span class=\"token punctuation\">,</span> string path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 更改游戏场景背景图</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 背景绘制</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PlayBGM</span><span class=\"token punctuation\">(</span>string MusicPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 播放背景音乐</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span>string MusicPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 播放音效</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 调用三个 draw 函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">updateWithoutInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 与输入无关的更新</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">updateWithKeyInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 与键入有关的更新</span></pre></td></tr></table></figure><h2 id=\"land类\"><a class=\"anchor\" href=\"#land类\">#</a> Land 类</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>IMAGE <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将图片存入该指针所指向的地址（地面图片）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">float</span> land_width<span class=\"token punctuation\">,</span> land_height<span class=\"token punctuation\">,</span> land_vy<span class=\"token punctuation\">;</span><span class=\"token comment\">// 地板宽高，地板速度</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span><span class=\"token comment\">// 当前成绩</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> broken_y<span class=\"token punctuation\">;</span><span class=\"token comment\">// 记录破碎地板的 y 坐标</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">LandState</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 单个地板的状况</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">float</span> middle_x<span class=\"token punctuation\">;</span><span class=\"token comment\">// 地板中心 x 坐标</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">float</span> top_y<span class=\"token punctuation\">;</span><span class=\"token comment\">// 地板上部 y 坐标（上部是为了判断碰撞方便）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">float</span> vx<span class=\"token punctuation\">;</span><span class=\"token comment\">// 移动地板移动速度</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    LandType landType<span class=\"token punctuation\">;</span><span class=\"token comment\">// 地板类型</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    IMAGE <span class=\"token operator\">*</span>im_land<span class=\"token punctuation\">;</span><span class=\"token comment\">// 地板图片，赋图片地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span> land<span class=\"token punctuation\">[</span>_land_num_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 共生成_land_num_个地板</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">Land</span><span class=\"token punctuation\">(</span>string path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 构造函数初始化</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">retry_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 重新运行游戏时的初始化</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Land_type</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 随机生成地板</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 绘制地板</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">show_topbar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 绘制顶栏</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">updateLandY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 更新地板</span></pre></td></tr></table></figure><h2 id=\"player类\"><a class=\"anchor\" href=\"#player类\">#</a> Player 类</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>IMAGE <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将图片存入该指针所指向的地址（玩家图片）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PlayerStatus playerStatus<span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人当前状态</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">float</span> x_middle<span class=\"token punctuation\">,</span> y_bottom<span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人中心 x 坐标，底部 y 坐标（方便碰撞判断）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">float</span> vx<span class=\"token punctuation\">,</span> vy<span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人水平竖直方向速度</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人的宽高</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">float</span> rebound_vy<span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人反弹的速度</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">bool</span> isPlayer_yMax<span class=\"token punctuation\">,</span> isPlayer_died<span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人是否到达超过半高，超过半高则小人不动，地面动；判断小人是否死亡</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">Player</span><span class=\"token punctuation\">(</span>string path<span class=\"token punctuation\">,</span> string theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 构造函数初始化</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">retry_clean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 重新运行游戏时的初始化</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">change_theme</span><span class=\"token punctuation\">(</span>string theme<span class=\"token punctuation\">,</span> string path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 更改主题 (小人)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 绘制小人</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">moveLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人左移显示切换</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">moveRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人右移显示切换</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">autoJump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 回到初始小人</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">autoJump_fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人竹蜻蜓显示切换</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">autoJump_rocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人火箭显示切换</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">JudgeisPlayer_yMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 判断小人是否达到半高</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">isOnLand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人与地面碰撞判断</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">updateYcoordinate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 小人的运动更新 Y 轴坐标</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">JudgeisPlayer_died</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 判断玩家是否死亡</span></pre></td></tr></table></figure><h1 id=\"关键技术介绍\"><a class=\"anchor\" href=\"#关键技术介绍\">#</a> 关键技术介绍</h1>\n<h2 id=\"logoc图片的存储\"><a class=\"anchor\" href=\"#logoc图片的存储\">#</a> LogoC 图片的存储</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">IMAGE</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">IMAGE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">IMAGE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> IMAGE <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token operator\">~</span><span class=\"token function\">IMAGE</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">getwidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> <span class=\"token function\">getheight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  Image <span class=\"token operator\">*</span> hImage<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>由于 <code>LogoC</code>  中 <code>IMAGE</code>  类的构造函数仅包含按照路径构造，为了方便修改，以及避免在 <code>class</code>  声明时就将 <code>IMAGE</code>  类初始化导致异常 ( <code>IMAGE</code>  类必须在好像在调用 <code>setup</code>  函数之后才能够使用)，我都采用了 <code>IMAGE *</code>  指针类型来储存 <code>IMAGE</code>  对象的地址。<br />\n路径的写法我采用了 C++ 的 <code>string</code>  类型，方便修改，在最后使用 <code>c_str</code>  方法转化为 C 语言风格的字符数组字符串当作路径。</p>\n<h2 id=\"声音的播放与终止\"><a class=\"anchor\" href=\"#声音的播放与终止\">#</a> 声音的播放与终止</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Scene</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlayBGM</span><span class=\"token punctuation\">(</span>string MusicPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> string op <span class=\"token operator\">=</span> <span class=\"token string\">\"open \"</span> <span class=\"token operator\">+</span> MusicPath <span class=\"token operator\">+</span> <span class=\"token string\">\" alias BGM\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token function\">mciSendString</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">mciSendString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"play BGM repeat\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Scene</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span>string MusicPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> string op <span class=\"token operator\">=</span> <span class=\"token string\">\"open \"</span> <span class=\"token operator\">+</span> MusicPath <span class=\"token operator\">+</span> <span class=\"token string\">\" alias soundeffect\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token function\">mciSendString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"close soundeffect\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token function\">mciSendString</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token function\">mciSendString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"play soundeffect\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>声音的播放我采用的是 <code>MCI</code> ( <code>Media Control Interface</code> ，媒体控制接口) 发送命令的方式实现的。<br />\n在 <code>GCC</code>  等非 <code>MSVC</code>  编译器中要加入 <code>-lwinmm</code>  指令使得编译器识别该函数。</p>\n<h2 id=\"键盘操作的获取\"><a class=\"anchor\" href=\"#键盘操作的获取\">#</a> 键盘操作的获取</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Scene</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">updateWithKeyInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">keymsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  kmsg <span class=\"token operator\">=</span> <span class=\"token function\">getkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>flag <span class=\"token operator\">==</span> KEY_DOWN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    direct <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'D'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'d'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">39</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    direct <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">27</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    welcome<span class=\"token punctuation\">.</span>interfacetype <span class=\"token operator\">=</span> I_gamepause<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>flag <span class=\"token operator\">==</span> KEY_UP<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'D'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'d'</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">39</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    direct <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direct <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  player<span class=\"token punctuation\">.</span><span class=\"token function\">moveLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direct <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  player<span class=\"token punctuation\">.</span><span class=\"token function\">moveRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由于键盘的长按有判定时间，大概在几百毫秒左右，但是显示在操作中就会导致小人先动一下然后再持续移动。<br />\n为了解决这个问题，我们可以把小人的左移右移设为一个状态，按下左移或者右移时记录下这个状态，然后在松开这些键的时候把状态归零。然后根据当前所处的状态进行操作的更新。</p>\n<h2 id=\"实现简陋的输入框功能\"><a class=\"anchor\" href=\"#实现简陋的输入框功能\">#</a> 实现简陋的输入框功能</h2>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/BF45fyiV7tzvuEq.png\" alt=\"\" /></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>interfacetype <span class=\"token operator\">==</span> I_change_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">bool</span> is_change <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">keymsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   kmsg <span class=\"token operator\">=</span> <span class=\"token function\">getkey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>flag <span class=\"token operator\">==</span> KEY_DOWN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isalnum</span><span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      in <span class=\"token operator\">+=</span> kmsg<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      is_change <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      in<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      is_change <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">13</span> <span class=\"token operator\">||</span> kmsg<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token number\">27</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     interfacetype <span class=\"token operator\">=</span> I_option<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过接收输入输出存入字符串，再用 <code>showtext</code>  函数显示出来，虽然简陋，也不支持中文的输入，不过也算是实现了这个功能。</p>\n<h2 id=\"游戏的存档与读档\"><a class=\"anchor\" href=\"#游戏的存档与读档\">#</a> 游戏的存档与读档</h2>\n<p>游戏存档为了防止被修改导致游戏出现异常，使用了二进制来存取数据，对于固定大小的类型直接按所占字节进行存取即可，对于非定长类型例如字符串，可以先存储字符串的长度，再存入字符数据即可，这样读取时就知道需要读取多少字节的数据，实现字符串的二进制读写。</p>\n<p>存档部分代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">SaveData</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">game_save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> ofstream savedata<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> size_t StringLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"savedata.dat\"</span><span class=\"token punctuation\">,</span> ios<span class=\"token double-colon punctuation\">::</span>out <span class=\"token operator\">|</span> ios<span class=\"token double-colon punctuation\">::</span>binary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token comment\">//Welcome 部分</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>welcome<span class=\"token punctuation\">.</span>themetype<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DJTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>welcome<span class=\"token punctuation\">.</span>bgm<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> StringLength <span class=\"token operator\">=</span> welcome<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>StringLength<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>size_t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> welcome<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token comment\">//Land 部分</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land_width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land_height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land_vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>broken_y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> _land_num_<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>Land<span class=\"token double-colon punctuation\">::</span>LandState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token comment\">//Player 部分</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>playerStatus<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PlayerStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>x_middle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>y_bottom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>vx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>rebound_vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>isPlayer_yMax<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>isPlayer_died<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>读档部分代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">SaveData</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">game_load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> ifstream savedata<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> size_t StringLength<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"savedata.dat\"</span><span class=\"token punctuation\">,</span> ios<span class=\"token double-colon punctuation\">::</span>in <span class=\"token operator\">|</span> ios<span class=\"token double-colon punctuation\">::</span>binary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedata<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  savedata<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token comment\">//Welcome 部分</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>welcome<span class=\"token punctuation\">.</span>themetype<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>DJTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>welcome<span class=\"token punctuation\">.</span>bgm<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>StringLength<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>size_t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>StringLength <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> StringLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> buffer<span class=\"token punctuation\">[</span>StringLength<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'\\0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> welcome<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>buffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token comment\">//Land 部分</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land_width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land_height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land_vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>broken_y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> _land_num_<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>Land<span class=\"token double-colon punctuation\">::</span>LandState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> landrocket<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_landrocket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> landfly<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_landfly<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> mvspring1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_mvspring1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> mvland<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_move<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> fragile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_break<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> landspring1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_landspring1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> normal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>im_normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre> <span class=\"token comment\">//Player 部分</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>playerStatus<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PlayerStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>x_middle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>y_bottom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>vx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>rebound_vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>isPlayer_yMax<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>player<span class=\"token punctuation\">.</span>isPlayer_died<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre> savedata<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre> welcome<span class=\"token punctuation\">.</span><span class=\"token function\">change_theme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"地板的随机生成\"><a class=\"anchor\" href=\"#地板的随机生成\">#</a> 地板的随机生成</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Land</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Land_type</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lnor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lfr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lspr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lfly<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mvspr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lroc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">int</span> rd <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> lnor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> lfr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> fragile<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_break<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> mv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> mvland<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_move<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> lspr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> landspring1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_landspring1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> lfly<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> landfly<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_landfly<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> mvspr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> mvspring1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_mvspring1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rd <span class=\"token operator\">&lt;</span> lroc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> landrocket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>im_land <span class=\"token operator\">=</span> im_landrocket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>_Doodle_Jump_Width_ <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>land_width <span class=\"token operator\">-</span> _Doodle_Jump_Width_ <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先使用 <code>srand((unsigned)time(NULL));</code>  按时间初始化随机数种子，再通过 <code>rand()</code>  函数生成随机数，按照不同概率生成地板类型。可以将概率写入函数参数表中，这样可以更加方便地按照游戏的进行更改不同的概率，提高游戏难度。</p>\n<h2 id=\"小人与地板的碰撞判断\"><a class=\"anchor\" href=\"#小人与地板的碰撞判断\">#</a> 小人与地板的碰撞判断</h2>\n<p>碰撞部分较为愚蠢的采用了手写碰撞距离的判断，不过该游戏所需碰撞的分类并不多，手写距离只是限制了地板以及小人高度的变化。通过多分支结构来判断不同地板的情况。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Player</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">isOnLand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> _land_num_<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>y_bottom <span class=\"token operator\">-</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top_y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> vy<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>vy <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> mvspring1 <span class=\"token operator\">||</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> landspring1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> land<span class=\"token punctuation\">.</span>land_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离，玩家没有落在地面上</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离，玩家踩在弹簧上</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/spring.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> mvspring1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> mvspring2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> landspring2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     y_bottom <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top_y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     vy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/jump.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     vy <span class=\"token operator\">=</span>  <span class=\"token operator\">-</span>rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">autoJump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> landfly<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> land<span class=\"token punctuation\">.</span>land_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离，玩家没有落在地面上</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离，玩家踩在竹蜻蜓上</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/fly.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     y_bottom <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top_y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     vy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     <span class=\"token function\">autoJump_fly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/jump.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     vy <span class=\"token operator\">=</span>  <span class=\"token operator\">-</span>rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     <span class=\"token function\">autoJump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">==</span> landrocket<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> land<span class=\"token punctuation\">.</span>land_width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离，玩家没有落在地面上</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离，玩家踩在竹蜻蜓上</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/rocket.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     y_bottom <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top_y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     vy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>     <span class=\"token function\">autoJump_rocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/jump.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     vy <span class=\"token operator\">=</span>  <span class=\"token operator\">-</span>rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     <span class=\"token function\">autoJump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">!=</span> broken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 其他类型地面判断</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">61</span> <span class=\"token operator\">>=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x_middle <span class=\"token operator\">+</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>middle_x <span class=\"token operator\">+</span> land<span class=\"token punctuation\">.</span>land_width <span class=\"token operator\">&amp;&amp;</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">!=</span> broken_over<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 大约估算图像中人物脚的距离</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">!=</span> fragile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/jump.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>welcome<span class=\"token punctuation\">.</span>sound_effect<span class=\"token punctuation\">)</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">PlayMusic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sounds/break.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>landType <span class=\"token operator\">=</span> broken<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      land<span class=\"token punctuation\">.</span>broken_y <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top_y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>     y_bottom <span class=\"token operator\">=</span> land<span class=\"token punctuation\">.</span>land<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>top_y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>     vy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> rebound_vy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     <span class=\"token function\">autoJump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre> <span class=\"token function\">JudgeisPlayer_died</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"软件说明书\"><a class=\"anchor\" href=\"#软件说明书\">#</a> 软件说明书</h1>\n<h2 id=\"开始界面\"><a class=\"anchor\" href=\"#开始界面\">#</a> 开始界面</h2>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/I9w8ZGLqOQn2Pmg.png\" alt=\"\" /><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/7iqYJfT8OhINm2o.png\" alt=\"\" /><br />\n开始：开始游戏并清空存档<br />\n继续：读取存档以开始游戏，若无存档会报错。<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/JgIC7cYAnrLO8kG.png\" alt=\"\" /><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/iN2IbEFwpSmJ7Pe.png\" alt=\"\" /><br />\n规则：按规则按钮会显示规则。按下一页及返回按钮可以退出规则界面。<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/5f2KCYPNaI6dlui.png\" alt=\"\" /><br />\n排行榜：显示排行榜，按返回按键或者点击界面的其他地方可以退出排行榜界面。<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/NF3iyxKhSzstHZm.png\" alt=\"\" /><br />\n设置：点击音乐音效旁的开关可以开关音乐音效；点击主题旁边的四个小人可以更改主题；点击 “点我改名” 可以改名。点设置界面的其他地方可以退出该界面<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/BF45fyiV7tzvuEq.png\" alt=\"\" /></p>\n<h2 id=\"游戏界面\"><a class=\"anchor\" href=\"#游戏界面\">#</a> 游戏界面</h2>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/G3pKt4NfdbQOxYa.png\" alt=\"\" /><br />\n游戏界面：按 <code>A/D/←/→</code> 来控制小人的运动<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/9csZAj4F2bCqREU.png\" alt=\"\" /><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/Qqt3zEakTfjWYbd.png\" alt=\"\" /><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/RoBDq2K6aupbzXv.png\" alt=\"\" /><br />\n在碰到这三个地板上的时物件时会高速运动一段路程<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/9gRVDcsMfa1AmCI.png\" alt=\"\" />碰到该地板时，地板会破碎并反弹一次<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/R3eoIql1sKzJGmr.png\" alt=\"\" />该地板是会左右移动的<br />\n游戏目标就是尽可能得到最高的分数<br />\n掉出游戏界面即角色死亡<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/M5WyvBGA47mlNsT.png\" alt=\"\" /><br />\n暂停：暂停按键在右上角，也可以通过 <code>ESC</code>  按键来呼出暂停界面<br />\n设置按键可以调出设置；菜单按键可以回到开始界面，同时也会把当前游戏存档；重玩按键可以重开；按下返回按键退出暂停状态。<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/Qk3aoTzsx4XLwbN.png\" alt=\"\" /><br />\n死亡后可以按重玩按钮重新游戏；按排行榜看排行榜；点击菜单回到开始界面</p>\n<h1 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h1>\n<h2 id=\"遇到的问题及解决方案\"><a class=\"anchor\" href=\"#遇到的问题及解决方案\">#</a> 遇到的问题及解决方案</h2>\n<h3 id=\"image对象的创建\"><a class=\"anchor\" href=\"#image对象的创建\">#</a> IMAGE 对象的创建</h3>\n<p>出于对性能以及代码可读性的考虑，我决定使用 <code>IMAGE</code>  对象来存储图片。但是我在创建 <code>IMAGE</code>  对象时经常遇到这种错误:<br />\n<img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/15/iWOy7caBtzSID6U.png\" alt=\"\" /><br />\n 最后经过单独把 <code>IMAGE</code>  类抽出来排查发现 <code>IMAGE</code>  类的创建必须在运行 <code>setup()</code>  函数之后。<br />\n初步估计 <code>setup()</code>  函数中应该包含了 <code>LogoC</code>  图形库初始化相关代码。</p>\n<h3 id=\"输入框功能如何实现\"><a class=\"anchor\" href=\"#输入框功能如何实现\">#</a> 输入框功能如何实现</h3>\n<p>由于 <code>LogoC</code>  中没有输入框相关控件的支持，我只能通过 <code>getkey()</code>  函数来实现键盘的输入和输出，再使用 <code>showtext()</code>  函数显示出来。</p>\n<h3 id=\"小人运动卡顿问题\"><a class=\"anchor\" href=\"#小人运动卡顿问题\">#</a> 小人运动卡顿问题</h3>\n<p>游戏中在操作小人运动时会出现小人先动一下然后再持续移动。<br />\n这是因为由于键盘的长按有判定时间，大概在几百毫秒左右。为了解决这个问题，我们可以把小人的左移右移设为一个状态，按下左移或者右移时记录下这个状态，然后在松开这些键的时候把状态归零。然后根据当前所处的状态进行操作的更新，就能实现无延迟的小人移动。</p>\n<h3 id=\"鼠标运动卡顿问题\"><a class=\"anchor\" href=\"#鼠标运动卡顿问题\">#</a> 鼠标运动卡顿问题</h3>\n<p>在游戏运行过程中，经常会出现鼠标点击却要过一段时间才有反应的情况，是因为等待接受的 mouse 信号过多导致迟滞。解决方案就是通过多线程将获取鼠标的代码独立在一个线程中运行。</p>\n<h2 id=\"尚未解决的问题\"><a class=\"anchor\" href=\"#尚未解决的问题\">#</a> 尚未解决的问题</h2>\n<h3 id=\"输入框功能仍旧不够完善\"><a class=\"anchor\" href=\"#输入框功能仍旧不够完善\">#</a> 输入框功能仍旧不够完善</h3>\n<p>所实现的输入框功能过于简陋，仅能实现英文单词和数字的输入，无法实现例如中文的输入，导致玩家名称仅能是英文名，暂无良好的解决方法。</p>\n<h3 id=\"mci对wav格式音乐支持问题\"><a class=\"anchor\" href=\"#mci对wav格式音乐支持问题\">#</a> MCI 对 wav 格式音乐支持问题</h3>\n<p>在背景音乐播放完一遍时，我需要重新播放一遍背景音乐，一般来说，我们可以在 <code>MCI</code>  命令中加一段 <code>&quot;repeat&quot;</code>  即可，但是在实际操作中，倘若播放的音乐格式是 <code>wav</code>  格式，不仅不能实现重复，音乐也会播放失败，我只能将需要循环播放的背景音乐转为 <code>mp3</code>  格式，经测试能够正常循环播放，但是还是对于 <code>MCI</code>  对 <code>wav</code>  格式的支持感到不解。</p>\n<h3 id=\"字体在不同电脑上显示不同\"><a class=\"anchor\" href=\"#字体在不同电脑上显示不同\">#</a> 字体在不同电脑上显示不同</h3>\n<p><code>LogoC</code>  中的 <code>textfont()</code>  函数支持的字体选择仅能通过字体在计算机中的序号来选择，导致了在不同电脑中的字体显示不一样。解决方法也是有的，因为我所需要的仅仅只是数字和字母，所以我可以通过把这些字体以位图的方式呈现，再在显示时截取相应片段即可。<br />\n但是工作量有亿点点大，最终决定还是放弃了。</p>\n<h3 id=\"代码行数过多可读性较差\"><a class=\"anchor\" href=\"#代码行数过多可读性较差\">#</a> 代码行数过多，可读性较差</h3>\n<p>项目所有文件的代码总行数超过了 <code>1000</code>  行 (10+171+466+90+86+111+232=1166)，在 UI 设计中的行数过于庞大 (超过半数代码)，在实现基础的游戏功能时仅用了 <code>200</code>  多行的代码，在项目逐渐庞大之后，不经常写注释的弊端便暴露出来，导致后半段写的代码可能包含一些重复的代码，降低了可读性，也使得代码看上去没有那么美观。</p>\n<h3 id=\"cpu占用过高\"><a class=\"anchor\" href=\"#cpu占用过高\">#</a> CPU 占用过高</h3>\n<p>写出来的程序所占用的资源过多，在我自己的电脑（2015 款的 MacBook Air）会有极为严重的卡顿现象，即使使用多线程也无法改善。而且在学校机房的电脑上，运行游戏时也会有接近 20% 的 CPU 占用，暂无良好的解决方案。</p>\n<h1 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h1>\n<blockquote>\n<ol>\n<li>《LogoC 使用参考》 虞铭财</li>\n<li>菜鸟教程</li>\n</ol>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "C/C++",
                "课程设计",
                "C/C++",
                "LogoC",
                "游戏"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/display/",
            "url": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/display/",
            "title": "Step.3 界面显示",
            "date_published": "2020-08-13T13:12:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\"><strong>🌈界面显示</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"首页置顶文章\"><a class=\"anchor\" href=\"#首页置顶文章\">#</a> 首页置顶文章</h1>\n<p>在文章的 Front Matter 设置 <code>sticky: true</code> ，则该文章将显示在首页最上方的 <code>置顶文章</code> 列。<br />\n多篇文章按照发布时间倒序排列，不分页。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 置顶文章</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sticky: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr></table></figure><h1 id=\"首页精选分类\"><a class=\"anchor\" href=\"#首页精选分类\">#</a> 首页精选分类</h1>\n<p>想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。</p>\n<ol>\n<li>\n<p>首先，修改站点配置：<br />\n找到 <code>category_map:</code> ，配置每个分类对应的英文映射，比如：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">category_map</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">计算机科学</span><span class=\"token punctuation\">:</span> computer<span class=\"token punctuation\">-</span>science</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">Java</span><span class=\"token punctuation\">:</span> java</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">C++</span><span class=\"token punctuation\">:</span> cpp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">二进制杂谈</span><span class=\"token punctuation\">:</span> note</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">计算机程序设计（C++）-西安交通大学</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">零基础学Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">面向对象程序设计-Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">2</span></pre></td></tr></table></figure><blockquote>\n<p>注意：hexo 会自动处理路径中的特殊字符，~`!@#$%<span></span>^&amp;*()-_+=<span></span>{}|\\;:&quot;'&lt;&gt;,.? 以及空格，这些全部会被替换成 <code>-</code> <br />\n 所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的 <code>cover.jpg</code></p>\n</blockquote>\n</li>\n<li>\n<p>在 <code>&lt;root&gt;/source/_posts</code>  文件夹相应的目录里，存放封面图<br />\n例子：如 <a href=\"https://shoka.lostyu.me/computer-science/java/course-1/week-1/\">第 1 周 计算</a> 这篇文章。<br />\n所处的分类是</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>计算机科学<span class=\"token punctuation\">,</span> Java<span class=\"token punctuation\">,</span> 零基础学Java语言<span class=\"token punctuation\">-</span>浙江大学<span class=\"token punctuation\">-</span>翁恺<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>现在需要在首页显示 <code>零基础学Java语言-浙江大学-翁恺</code> 这个分类，翻转卡片后，显示这个分类下的文章们。<br />\n而该分类经过英文映射，它的路径将是 <code>/computer-science/java/course-1/</code> 。</p>\n<p>那么，请在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  的目录下放置 <code>cover.jpg</code>  文件。<br />\n只要 <code>分类路径</code> 对应的目录下<strong>存在</strong> <code>cover.jpg</code>  文件，这个分类就会在首页显示。<br />\n在进行 <code>hexo g</code>  时，本分类的封面图会自动被复制到 public 目录里相应的位置。</p>\n</li>\n<li>\n<p>事实上，为了方便文章管理，这个分类下所有文章的 md 文件，我都会放在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  这个目录下。</p>\n<p>且站点配置文件里，永久链接设置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/</pre></td></tr></table></figure><p><code>hexo g</code>  后，文章的 html 文件们将全部生成到 <code>&lt;root&gt;/public/computer-science/java/course-1/</code>  目录。<br />\n具体可以查看<a href=\"https://github.com/amehime/shoka\">本博客的 github 仓库</a>。</p>\n</li>\n<li>\n<p>文章详情界面中的 <code>系列文章</code> ，显示的是与当前文章同一分类的其他文章，并按照文章名正序排序。</p>\n</li>\n</ol>\n<blockquote>\n<p>o (*￣▽￣*) ゞ<br />\n其实，不设置 <code>category_map</code>  也可以，只要在分类路径对应的文件夹下存在 <code>cover.jpg</code>  文件就行。<br />\n现在，这项功能与 <code>category_dir</code>  的配置也无关， <code>hexo g</code>  生成后，图片会自动被转移到 <code>category_dir</code>  的相关子目录下。</p>\n</blockquote>\n<h1 id=\"文章封面图\"><a class=\"anchor\" href=\"#文章封面图\">#</a> 文章封面图</h1>\n<ul>\n<li>\n<p>如果文章的 Front Matter 设置了 <code>cover: image path</code> ，则封面会显示这张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Images</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或者写成</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>这里 <code>cover</code>  的值可以是位于 <code>source</code>  目录里的图片文件，此处是 <code>&lt;root&gt;/source/assets/wallpaper-2572384.jpg</code>  文件，也可以是一个某网址。</p>\n</li>\n<li>\n<p>如果文章是一个 <code>gallery post</code> ，即 Front Matter 设置了 <code>photos</code> ，则会封面会显示设置的第一张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Gallery Post</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">photos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2311325.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>878514.jpg</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>此时默认会显示第一个图片，即位于 <code>&lt;root&gt;/source/assets/</code>  目录里的 <code>wallpaper-2572384.jpg</code> 。</p>\n</li>\n<li>\n<p>如果站点配置中设置了 <code>post_asset_folder: true</code> ，那么上述本地图片路径应为 <code>&lt;root&gt;/source/_posts/文章同名的文件夹/assets/wallpaper-2572384.jpg</code> ，当然此时 <code>assets</code>  目录可以省掉。</p>\n</li>\n<li>\n<p>如果以上设置均不存在，将显示一张随机图片，<a href=\"../config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库配置戳此</a>。</p>\n</li>\n</ul>\n<h1 id=\"图片展示与相册\"><a class=\"anchor\" href=\"#图片展示与相册\">#</a> 图片展示与相册</h1>\n<p>在文章的 Front Matter 设置 <code>fancybox: false</code> ，可以关闭文章页的图片展示功能。<br />\n使用<a href=\"http://miromannino.github.io/Justified-Gallery/\"> Justified-Gallery</a> 对 Gallery Post 内图案进行排列。</p>\n<p>下面介绍一些小技巧：</p>\n<ol>\n<li>让图案下方显示 <code>title</code>  的 markdown 代码</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![这里是 alt](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;这里是 title&quot;)</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"这里是alt\" title=\"这里是title\" /></p>\n<ol start=\"2\">\n<li>设置图片的大小</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小 - 固定宽度和高度&quot;)&#123;height&#x3D;&quot;100px&quot; width&#x3D;&quot;400px&quot;&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小 - 固定宽度&quot;)&#123;width&#x3D;&quot;400px&quot;&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;定义图片大小 - 固定高度&quot;)&#123;height&#x3D;&quot;100px&quot;&#125;</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"\" title=\"定义图片大小-固定宽度和高度\" height=\"100px\" width=\"400px\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"\" title=\"定义图片大小-固定宽度\" width=\"400px\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"\" title=\"定义图片大小-固定高度\" height=\"100px\" /></p>\n<ol start=\"3\">\n<li>除了在 Front Matter 里配置 <code>photos</code>  可以显示相册图案列表外，还可以这样写</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>## 图案列表 No.1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclfdu6exj20zk0m87hw.jpg &quot;这里是 title&quot;)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclflwv2aj20zk0m84qp.jpg)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclg5ms2rj20zk0m8u0x.jpg)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclhnx9glj20zk0m8npd.jpg)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;.gallery&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>## 图案列表 No.2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicitht3xtj20zk0m8k5v.jpg)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclil3m4ej20zk0m8tn8.jpg)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicljgocqbj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gipetfk5zwj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#123;.gallery data-height&#x3D;&quot;120&quot;&#125;</pre></td></tr></table></figure><p><code>data-height</code>  用来设置每行的高度，默认为 <code>220</code></p>\n<h2 id=\"图案列表no1\"><a class=\"anchor\" href=\"#图案列表no1\">#</a> 图案列表 No.1</h2>\n<p class=\"gallery\"><img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg\" alt=\"\" title=\"这里是title\" /><br />\n<img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg\" alt=\"\" /></p>\n<h2 id=\"图案列表no2\"><a class=\"anchor\" href=\"#图案列表no2\">#</a> 图案列表 No.2</h2>\n<p class=\"gallery\" data-height=\"120\"><img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg\" alt=\"\" /></p>\n<h1 id=\"自定义页面配色\"><a class=\"anchor\" href=\"#自定义页面配色\">#</a> 自定义页面配色</h1>\n<p>主题配色全部在 <code>&lt;root&gt;/themes/shoka/source/css/_colors.styl</code>  文件中，可以自行查看。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>colors.styl</code> ，在此文件中添改样式。</p>\n<blockquote>\n<p>自定义 <code>colors.styl</code>  文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>\n</blockquote>\n<p>主题支持在 <code>&lt;root&gt;/source/_data/</code>  目录建立三个自定义 <code>styl</code>  文件：</p>\n<table>\n<thead>\n<tr>\n<th>自定义文件名</th>\n<th>对应默认样式文件</th>\n<th>样式功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>colors.styl</code></td>\n<td><code>_colors.styl</code></td>\n<td>页面配色</td>\n</tr>\n<tr>\n<td><code>iconfont.styl</code></td>\n<td><code>_iconfont.styl</code></td>\n<td><a href=\"../config/#iconfont%E5%9B%BE%E6%A0%87\">图标样式</a></td>\n</tr>\n<tr>\n<td><code>custom.styl</code></td>\n<td>-</td>\n<td>任意自定义样式</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自定义主题图片\"><a class=\"anchor\" href=\"#自定义主题图片\">#</a> 自定义主题图片</h1>\n<p>如果想要修改主题的 <code>&lt;root&gt;/themes/shoka/source/images/</code>  目录内的某张图片，请在 <code>&lt;root&gt;/source/_data/</code>  目录新建目录 <code>images</code> ，并在这个文件夹中添加<ins>同名</ins>文件，部署时将自动覆盖主题内的默认图片。</p>\n<p>可以用此方法自定义头像、打赏二维码等图片，并且避免覆盖更新主题时遗失自定义文件。</p>\n<h1 id=\"自定义语言包\"><a class=\"anchor\" href=\"#自定义语言包\">#</a> 自定义语言包</h1>\n<p>本功能参考 NexT，主要可以用来定义菜单等处显示的文字，且可以方便主题无脑覆盖升级。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>languages.yml</code> 。</p>\n<p>按照以下格式添加配置项：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># language</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">zh-CN</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># items</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">copyright</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\"># the translation you perfer</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> 本文博主</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">en</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">travellings</span><span class=\"token punctuation\">:</span> Travellings</pre></td></tr></table></figure><p>可以参考主题目录下的 <code>example/source/_data</code>  文件夹。</p>\n<blockquote>\n<p>站点配置及文件的 Front Matter 中， <code>language</code>  项只支持 <code>zh-CN</code> 、 <code>zh-HK</code> 、 <code>zh-TW</code> 、 <code>ja</code> 、 <code>en</code> 。<br />\n类似写成 <code>zh_CN</code>  这样是不可以的。</p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/config/",
            "url": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/config/",
            "title": "Step.2 基本配置",
            "date_published": "2020-08-13T12:56:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\"><strong>📌基本配置</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"站点别称\"><a class=\"anchor\" href=\"#站点别称\">#</a> 站点别称</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">alternate</span><span class=\"token punctuation\">:</span> Yume Shoka</pre></td></tr></table></figure><p>这里设置的名称代替 Logo，显示在页面顶部，以及页尾©️处</p>\n<h1 id=\"静态文件目录\"><a class=\"anchor\" href=\"#静态文件目录\">#</a> 静态文件目录</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\">#//cdn.jsdelivr.net/gh/amehime/shoka@latest/</span></pre></td></tr></table></figure><p>默认值是 <code>/</code> ，指使用本地静态文件<br />\n可以修改成 <code>//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/</code>  这种形式，以使用 jsDelivr 进行加速。<br />\nPS：jsDelivr 并不是实时更新，重新生成文件后需要耐心等待</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span> css</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span> js</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> images</pre></td></tr></table></figure><p>静态文件所处目录的实际目录名，这些一般不改。</p>\n<h1 id=\"夜间模式\"><a class=\"anchor\" href=\"#夜间模式\">#</a> 夜间模式</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">darkmode</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># true</span></pre></td></tr></table></figure><p>默认情况下，是否开启夜间模式取决于（优先级从高到低）：</p>\n<ol>\n<li>访客点击页面头部切换按钮的自行选择</li>\n<li>访客切换了浏览设备的主题色调</li>\n<li>您的 <code>darkmode</code>  配置项</li>\n</ol>\n<h1 id=\"自动定位\"><a class=\"anchor\" href=\"#自动定位\">#</a> 自动定位</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">auto_scroll</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># false</span></pre></td></tr></table></figure><p>默认情况下，再次打开页面时，会自动滚动到上次浏览的位置。<br />\n这个选项设为 <code>false</code>  时将停用此功能。</p>\n<h1 id=\"加载动画\"><a class=\"anchor\" href=\"#加载动画\">#</a> 加载动画</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 是否显示页面加载动画 loading-cat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">loader</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">start</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 当初次打开页面时，显示加载动画</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">switch</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># tab 切换到其他页面时，显示加载动画</span></pre></td></tr></table></figure><p>tab 切换后只是显示 loading 动画，实际并未重新加载页面</p>\n<h1 id=\"页面特效\"><a class=\"anchor\" href=\"#页面特效\">#</a> 页面特效</h1>\n<p>单击页面的烟花效果配置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">fireworks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否启用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">color</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 烟花颜色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(255,182,185,.9)\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(250,227,217,.9)\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(187,222,214,.9)\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(138,198,209,.9)\"</span></pre></td></tr></table></figure><h1 id=\"加载谷歌字体\"><a class=\"anchor\" href=\"#加载谷歌字体\">#</a> 加载谷歌字体</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">font</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># Font options:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\"># `external: true` will load this font family from `host` above.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># `family: Times New Roman`. Without any quotes.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\"># Global font settings used for all elements inside &lt;body>.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Mulish</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\"># Font settings for alternate title.</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">logo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Fredericka the Great</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3.5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\"># Font settings for site title.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif JP</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.5</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\"># Font settings for headlines (&lt;h1> to &lt;h6>).</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token key atrule\">headings</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif SC</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token comment\"># Font settings for posts.</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token comment\"># Font settings for &lt;code> and code blocks.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token key atrule\">codes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Inconsolata</pre></td></tr></table></figure><p>此功能基本参考 NexT。<br />\n加粗标题的字体总是使用 <code>Noto Serif</code> ，为了正确友好的显示日文中的汉字，会先后加载 <code>headings</code>  和 <code>title</code>  的字体设置。</p>\n<h1 id=\"iconfont图标\"><a class=\"anchor\" href=\"#iconfont图标\">#</a>  <code>iconfont</code>  图标</h1>\n<p>主题没有直接使用 Font Awesome，是因为用不到那么多 icon 感觉非常浪费，因此在 Iconfont 上重新建立了一个项目。<br />\n <code>font-family</code>  设为 <code>ic</code> ，所有字体样式前缀为 <code>i-</code> ，具体参见 <code>&lt;root&gt;/themes/shoka/source/css/_iconfont.styl</code> 。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># project of https://www.iconfont.cn/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># //at.alicdn.com/t/font_1832207_c8i9n1ulxlt.css => 1832207_c8i9n1ulxlt</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">iconfont</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1832207_c8i9n1ulxlt\"</span></pre></td></tr></table></figure><p>如果需要添加或修改，请留言告诉我您的<a href=\"https://www.iconfont.cn/\"> Iconfont</a> 用户名，我将把您添加到目前的<a href=\"https://www.iconfont.cn/manage/index?manage_type=myprojects&amp;projectId=1832207\">项目</a>中。</p>\n<p>添加权限为 <code>只读</code> ，此后您可以任意全选，批量保存到购物车中，添加至您自己的项目里，并将主题配置文件中的 <code>iconfont</code>  值改为您的项目。</p>\n<p>注意，您的项目应设置 <code>FontClass/Symbol 前缀</code> 为 <code>i-</code> 。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>iconfont.styl</code> ，把新增或修改的图标样式复制到这个文件中。</p>\n<blockquote>\n<p>自定义 <code>iconfont.styl</code>  文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>\n</blockquote>\n<h1 id=\"菜单与社交按钮\"><a class=\"anchor\" href=\"#菜单与社交按钮\">#</a> 菜单与社交按钮</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> home</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> /about/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> feather</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> list<span class=\"token punctuation\">-</span>alt</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> /categories/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> th</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> tags</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># friends: /friends/ || heart</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># links: /links/ || magic</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">social</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> github <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#191717\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">#google: https://plus.google.com/yourname || google</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">twitter</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//twitter.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> twitter <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#00aff0\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">zhihu</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.zhihu.com/people/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> zhihu <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#1e88e5\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">music</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/user/home?id=yourid || cloud-music || \"#e60026\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">weibo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//weibo.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> weibo <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#ea716e\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//about.me/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> address<span class=\"token punctuation\">-</span>card <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#3b5998\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">#email: mailto:yourname@mail.com || envelope || \"#55acd5\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">#facebook: https://www.facebook.com/yourname || facebook</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">#stackoverflow: https://stackoverflow.com/yourname || stack-overflow</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">#youtube: https://youtube.com/yourname || youtube</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">#instagram: https://instagram.com/yourname || instagram</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">#skype: skype:yourname?call|chat || skype</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">#douban: https://www.douban.com/people/yourname/ || douban</span></pre></td></tr></table></figure><p>如上，使用 <code>||</code>  作为分隔符，依次为  <code>链接 || 图标 || 颜色</code> 。<br />\n注意，只需要写图标名称，如 <code>github</code> ，则会自动转换为 <code>ic i-github</code> 。<br />\n十六进制颜色码需要 <code>&quot;&quot;</code>  包绕。</p>\n<p><code>menu</code>  支持一级子目录，子目录设置中的第一项必须为 <code>default</code> ，用来定义父级按钮的样式。</p>\n<p>菜单显示文字可以在语言包中定义，<a href=\"../display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85\">具体请戳这里</a></p>\n<h1 id=\"边栏配置\"><a class=\"anchor\" href=\"#边栏配置\">#</a> 边栏配置</h1>\n<p>边栏可以选择在左侧，或右侧<br />\n修改头像文件的地址，相对于静态文件目录 <code>images</code>  中配置的路径。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">sidebar</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># Sidebar Position.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> left</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">#position: right</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># Replace the default avatar image and set the url here.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> avatar.jpg</pre></td></tr></table></figure><p>可以将自己的图片放在 <code>&lt;root&gt;/source/_data/images/</code>  目录，甚至以同名覆盖主题内默认的头像图片，<a href=\"../display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87\">具体请戳这里</a></p>\n<h1 id=\"底部widgets\"><a class=\"anchor\" href=\"#底部widgets\">#</a> 底部 widgets</h1>\n<p>目前页面底部可以显示两个小部件，即 <code>随机文章</code> 和 <code>最近评论</code> 。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">widgets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">random_posts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 显示随机文章</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">recent_comments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 显示最近评论</span></pre></td></tr></table></figure><h1 id=\"字数及阅读时间统计\"><a class=\"anchor\" href=\"#字数及阅读时间统计\">#</a> 字数及阅读时间统计</h1>\n<p>安装好 <code>hexo-symbols-count-time</code>  插件后，不需要修改站点配置文件，直接使用插件默认配置就行。</p>\n<p>需要修改主题配置文件，找到两处 <code>cout</code> ，修改为 <code>true</code> ：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 页尾全站统计</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">footer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">since</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2010</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 文章界面统计</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h1 id=\"文章评论\"><a class=\"anchor\" href=\"#文章评论\">#</a> 文章评论</h1>\n<p><a href=\"https://valine.js.org/quickstart.html\">如何获取 LeanCloud 的 appId 和 appKey</a>。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appkey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> ヽ(○´∀`)ﾉ♪ <span class=\"token comment\"># Comment box placeholder</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> mp <span class=\"token comment\"># Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Pagination size</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 文章访问量统计</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">NoRecordIP</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 不记录 IP</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">serverURLs</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">powerMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 默认打开评论框输入特效</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> 新朋友</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> 主人</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> 小伙伴</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span> 金主粑粑</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">tagColor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-orange)\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-aqua)\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"var(--color-pink)\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token comment\"># - hash of master@email.com</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\"># - hash of master2@email.com</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token comment\"># - hash of friend@email.com</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\"># - hash of friend2@email.com</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">investor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\"># - hash of investor1@email.com</span></pre></td></tr></table></figure><p>tag 标签显示在评论者名字的后面，默认是 <code>tagMeta.visitor</code>  对应的值。<br />\n在 <code>tagMeta</code>  和 <code>tagColor</code>  中，除了 <code>visitor</code>  这个 key 不能修改外，其他 key 都可以换一换，但需要保证一致性。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> 游客</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> 管理员</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">waifu</span><span class=\"token punctuation\">:</span> 我老婆</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">tagColor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#855194\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#a77c59\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">waifu</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"#ed6ea0\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">admin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token comment\"># - hash of admin@email.com</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">waifu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token comment\"># - hash of waifu@email.com</span></pre></td></tr></table></figure><p>在文章 Front Matter 中也可以配置上述参数，访问该文章页面时，将覆盖全局配置。<br />\n尤其可以用来配置一个特殊的 placeholder。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1. 提问前请先仔细阅读本文档⚡\\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>评论通知与管理工具建议使用这个<a href=\"https://github.com/DesertsP/Valine-Admin\"> Valine-Admin</a>。<br />\n注意 <code>SITE_URL</code>  需要以 <code>/</code>  结尾。</p>\n<p>如果某一篇文章需要关闭评论功能，则在文章 Front Matter 中配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 关闭评论</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">comment</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><h1 id=\"背景音乐\"><a class=\"anchor\" href=\"#背景音乐\">#</a> 背景音乐</h1>\n<p>在主题配置文件中，设置全局播放列表。<br />\n在文章的 Front Matter 中，设置文章专有播放列表，访问该文章页面时，将覆盖全局配置。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>单列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/song<span class=\"token punctuation\">?</span>id=1387098940</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2088001742</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//www.xiami.com/collect/250830668</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//y.qq.com/n/yqq/playsquare/3535982902.html</pre></td></tr></table></figure><p>如上，可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲，可以同时填写多个。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>多列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2943811283</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2297706586</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2031842656</span></pre></td></tr></table></figure><p>如果需要自定义媒体文件，可以按照以下格式填写：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>单列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目1\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目2\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr></table></figure><figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>多列表</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目1\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"曲目2\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"播放地址\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token key atrule\">artist</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"艺术家\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"封面\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token key atrule\">lrc</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"歌词\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 列表2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2031842656</span></pre></td></tr></table></figure><p>如果要关闭当前页面的背景音乐播放器，则在文章 Front Matter 中配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 关闭背景音乐</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><h1 id=\"随机图库\"><a class=\"anchor\" href=\"#随机图库\">#</a> 随机图库</h1>\n<ul>\n<li>\n<p>默认的图片列表位于 <code>&lt;root&gt;/themes/shoka/_images.yml</code>  中。<br />\n使用了渣浪图库，使用一些上传工具，比如<a href=\"https://pic.gimhoy.com/\">这里</a><br />\n上传后图片的链接是 <code>http://wx4.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code> 。<br />\n只需要新一行写上 <code>- 6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code> 。</p>\n<p>如果想要自定义，则在 <code>&lt;root&gt;/source/_data/</code>  目录新建一个 <code>images.yml</code>  文件，这个文件中的图片至少 6 枚，将完全覆盖默认的图片列表。</p>\n</li>\n<li>\n<p>也可以直接在图片列表 yml 文件中，写上任意外链图片地址</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/qAMYEFXxJcKRsiG.gif</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/rjdhcSgEN8COBPA.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/HKyzSd7NI3mlBpt.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/Y1CBXqgeokEs457.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//i.loli.net/2020/10/30/Z5W6r2BSoiThHG1.jpg</pre></td></tr></table></figure><ul>\n<li>也可以在主题配置文件中，设置图床 API：</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>比如</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">image_server</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://acg.xydwz.cn/api/api.php\"</span></pre></td></tr></table></figure><h1 id=\"加载第三方组件\"><a class=\"anchor\" href=\"#加载第三方组件\">#</a> 加载第三方组件</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">vendors</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 略略略</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 略略略</span></pre></td></tr></table></figure><p>包括</p>\n<table>\n<tbody>\n<tr>\n<td><code>pace</code></td>\n<td>加载进度条</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>pjax</code></td>\n<td>页面无刷新加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>anime</code></td>\n<td>js 动画效果</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>algolia</code>   <code>instantsearch</code></td>\n<td>基于 algolia 的站内搜索</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>lazyload</code></td>\n<td>图片懒加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>quicklink</code></td>\n<td>链接资源预加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>fetch</code></td>\n<td>获取播放列表</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>katex</code>   <code>copy_tex</code></td>\n<td>数学公式显示及复制</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>fancybox</code></td>\n<td>图片放大显示及排列</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>valine</code></td>\n<td>基于 LeanCloud 的评论系统及文章阅读次数统计</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>chart</code></td>\n<td>图表显示</td>\n<td>按需</td>\n</tr>\n</tbody>\n</table>\n<p>以上文件加载全部基于 jsDelivr，并对全局加载的组件进行了文件合并。<br />\n如果不明白啥意思，则不要轻易修改。</p>\n<div class=\"note danger\">\n<p>主题版本升级的时候，可能会修改这里。<br />\n如果修改过主题默认 <code>_config.yml</code> ，记得更新主题时，末尾的 <code>vendors</code>  也要及时修改。</p>\n</div>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/dependents/",
            "url": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/dependents/",
            "title": "Step.1 依赖插件",
            "date_published": "2020-08-13T12:46:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\"><strong>💌依赖插件</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<div class=\"note warning\">\n<p>请务必将 hexo-renderer-multi-markdown-it 升级到最新版，目前为 0.1.5</p>\n</div>\n<p>Theme Shoka 依赖以下 Hexo 插件</p>\n<table>\n<thead>\n<tr>\n<th>插件名称</th>\n<th>npm 地址</th>\n<th>功能</th>\n<th>依赖程度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hexo-renderer-multi-markdown-it</td>\n<td><a href=\"https://www.npmjs.com/package/hexo-renderer-multi-markdown-it\">链接</a></td>\n<td>md 文件渲染器，压缩 css/js/html</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-autoprefixer</td>\n<td><a href=\"https://www.npmjs.com/package/hexo-autoprefixer\">链接</a></td>\n<td>给生成的 css 文件们添加浏览器前缀</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-algoliasearch</td>\n<td><a href=\"https://www.npmjs.com/package/hexo-algoliasearch\">链接</a></td>\n<td>站内搜索功能</td>\n<td>搜索按钮失灵</td>\n</tr>\n<tr>\n<td>hexo-symbols-count-time</td>\n<td><a href=\"https://www.npmjs.com/package/hexo-symbols-count-time\">链接</a></td>\n<td>文章或站点字数及阅读时间统计</td>\n<td>统计没有</td>\n</tr>\n<tr>\n<td>hexo-feed</td>\n<td><a href=\"https://www.npmjs.com/package/hexo-feed\">链接</a></td>\n<td>生成 Feed 文件</td>\n<td>Feed 文件没有</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>没有正确安装以上插件的话，本主题会报错 or 无法正确显示 or 部分功能失效。<br />\n <code>hexo-renderer-multi-markdown-it</code>  请注意升级到最新版</p>\n</blockquote>\n<p>安装完以上插件后，修改站点配置文件，加入相关配置。</p>\n<h1 id=\"multi-markdown-it安装与配置\"><a class=\"anchor\" href=\"#multi-markdown-it安装与配置\">#</a> multi-markdown-it 安装与配置</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<ol>\n<li>\n<p>安装前，记得务必卸载掉默认的 <code>hexo-renderer-marked</code> ，以及别的 markdown 文件渲染器。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> remove hexo-renderer-marked</pre></td></tr></table></figure></li>\n<li>\n<p>安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-renderer-multi-markdown-it</pre></td></tr></table></figure></li>\n<li>\n<p>如果安装缓慢，或者失败<br />\n如报错</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ERROR: Failed to download Chromium r515411<span class=\"token operator\">!</span> Set <span class=\"token string\">\"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\"</span> <span class=\"token function\">env</span> variable to skip download.</pre></td></tr></table></figure><p>因为有一步需要下载 puppeteer 里的 Chromium 内核，基于天朝内部网络现状，这一步能不能成功要靠科学和运气，所以为了避免安装失败，需要加上 <code>--ignore-scripts</code>  跳过 Chromium 内核的下载。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it <span class=\"token parameter variable\">--save</span> --ignore-scripts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-renderer-multi-markdown-it --ignore-scripts</pre></td></tr></table></figure><p>puppeteer 主要是用来渲染 mermaid 流程图，只要文章中不使用 mermaid 就没有任何问题，如果要使用 mermaid 建议还是想办法完全安装。</p>\n</li>\n</ol>\n<h2 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h2>\n<ol>\n<li>加入 <code>markdown</code>  配置，用来渲染 md 文件</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>加入 <code>minify</code>  配置，压缩 css/js/html</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除 hexo-feed 用到的模板文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/json.ejs'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/atom.ejs'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/rss.ejs'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.css'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">mangle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">toplevel</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">compress</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.js'</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>停用默认代码高亮功能，否则代码块的 mac 样式不能正常显示。<br />\n找到 <code>highlight</code>  和 <code>prismjs</code> ，把 <code>enable</code>  改成 <code>false</code> 。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><h1 id=\"autoprefixer配置建议\"><a class=\"anchor\" href=\"#autoprefixer配置建议\">#</a> autoprefixer 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr></table></figure><p>缺少这个插件，首页卡片翻转效果在部分浏览器中无法正确显示。</p>\n<h1 id=\"algolia配置建议\"><a class=\"anchor\" href=\"#algolia配置建议\">#</a> algolia 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><h1 id=\"feed配置建议\"><a class=\"anchor\" href=\"#feed配置建议\">#</a> feed 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#站点关键词，用 “,” 分隔</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-date\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/rss.ejs\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rss.xml\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">atom</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/atom.ejs\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"atom.xml\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">jsonFeed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/json.ejs\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"feed.json\"</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/",
            "url": "https://murlors.netlify.app/computer-science/note/theme-shoka-doc/",
            "title": "Hexo主题Shoka & multi-markdown-it渲染器使用说明",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>因博主被学业和工作掏空，本项目已停滞更新大半年，问题也无法及时回复大家，这个悲惨状态可能还要持续半年的样子。</p>\n<p>有很多热心小伙伴在评论区或者项目 issue 帮忙回答问题，非常非常感谢！</p>\n<p>本项目是完全开源的，也有做一些 example 示例，大家可以随便拿随便改。<br />\n但是很抱歉，博主我暂时不能提供更多的支持，这个写的乱七八糟的文档，暂时也没有时间把它写得更专业一些。<br />\n非常对不住大家！</p>\n<p>iconfont 的添加申请，我看到留言后会尽快加上，希望各位小伙伴能看到。</p>\n</div>\n<div class=\"note warning\">\n<p>当前版本更新至 0.2.5，<a href=\"#%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95\">更新记录点此</a></p>\n</div>\n<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\"><strong>🚀快速开始</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"设计缘由\"><a class=\"anchor\" href=\"#设计缘由\">#</a> 设计缘由</h1>\n<p>前几年在 Bear 和 Evernote 上整理了大量笔记，非常喜欢 Bear 默认的 markdown 渲染样式。<br />\n后来因为换了安卓手机，用不了 Bear，四处搜寻替代品，没有满意的。<br />\n然后阴差阳错知道了 Hexo，又得知 Github 也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在 Github Pages。</p>\n<p>因为这个博客是用来记笔记的，故起名 <code>书架</code> 。<br />\n对应的主题即 <code>Theme.Shoka</code> ，可以说是为了笔记阅读而生的主题。<br />\n样式严重参考 Bear，部分代码严重参考<a href=\"https://github.com/theme-next/\"> NexT</a>。</p>\n<p>Hexo 的默认及常用渲染器均使用 <code>highlight.js</code>  进行代码高亮，而我喜欢 <code>Prism.js</code> ，故重写了一个渲染器配合主题食用。<br />\n渲染器取名 <code>multi</code> ，因为集成了很多很多很多 <code>markdown-it</code>  插件，以及压缩静态文件的功能。<br />\n（最新版的默认渲染器也支持 <code>Prism.js</code>  了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>\n<p>墙内 Github Pages 访问速度时而感人，所以用了<a href=\"http://www.jsdelivr.com/\"> jsDelivr</a> 加速，主要是因为它可以按需合并依赖文件。</p>\n<h1 id=\"快速安装\"><a class=\"anchor\" href=\"#快速安装\">#</a> 快速安装</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cd your-blog</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><p>打开主题目录，内有 <code>example</code>  文件夹，提供了配置文件的 demo 供参考。</p>\n<h1 id=\"安装依赖插件\"><a class=\"anchor\" href=\"#安装依赖插件\">#</a> 安装依赖插件</h1>\n<p>在应用主题之前，必须至少安装 <a href=\"https://github.com/amehime/hexo-renderer-multi-markdown-it\">hexo-renderer-multi-markdown-it</a> 渲染插件 和 <a href=\"https://www.npmjs.com/package/hexo-autoprefixer\">hexo-autoprefixer</a>。</p>\n<p><a href=\"dependents/\">插件安装与配置教程戳此</a></p>\n<h1 id=\"应用主题\"><a class=\"anchor\" href=\"#应用主题\">#</a> 应用主题</h1>\n<h2 id=\"修改站点配置\"><a class=\"anchor\" href=\"#修改站点配置\">#</a> 修改站点配置</h2>\n<p>修改站点配置文件 <code>&lt;root&gt;/_config.yml</code> ，把主题改为  <code>shoka</code></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr></table></figure><h2 id=\"修改主题配置\"><a class=\"anchor\" href=\"#修改主题配置\">#</a> 修改主题配置</h2>\n<p>主题配置的所有参数在 <code>&lt;root&gt;/themes/shoka/_config.yml</code>  文件中。</p>\n<p>为了方便主题升级，请在根目录新建一个 yml 文件，命名为 <code>_config.shoka.yml</code> 。<br />\n也就是说，所有主题的自定义配置均保存于 <code>&lt;root&gt;/_config.shoka.yml</code>  文件。</p>\n<p><a href=\"config/\">主题的基础配置可以参考这里</a><br />\n<a href=\"display/\">界面显示相关的配置参考这里</a></p>\n<h1 id=\"更新记录\"><a class=\"anchor\" href=\"#更新记录\">#</a> 更新记录</h1>\n<p>标签含义：<br />\n❗ 需要手动操作的更新信息<br />\n⚠️ 需要注意的更新信息<br />\n🔧 已修复的问题<br />\n⌛ TODO</p>\n<h2 id=\"024-025\"><a class=\"anchor\" href=\"#024-025\">#</a> 0.2.4 👉 0.2.5</h2>\n<p>💡  避免直接修改主题文件，添加各种自定义：</p>\n<ul>\n<li><a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E9%85%8D%E8%89%B2\">样式</a>：包括配色、<a href=\"config/#iconfont%E5%9B%BE%E6%A0%87\">icon</a>、其他自定义样式</li>\n<li>图片：包括<a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87\">主题图片</a>、<a href=\"config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库</a></li>\n</ul>\n<p>🔧 修复一些 BUG</p>\n<h2 id=\"023-024\"><a class=\"anchor\" href=\"#023-024\">#</a> 0.2.3 👉 0.2.4</h2>\n<p>⚠️ <strong>评论功能更新</strong></p>\n<ul>\n<li>MiniValine 魔改版更新至 beta10，修改过主题默认 <code>_config.yml</code>  的同学，记得更新末尾的 <code>vendors</code>  到最新哦</li>\n<li>❗ 评论相关的配置有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a>\n<ul>\n<li>主要增加的 Tag 配置，现在可以各种自定义啦</li>\n</ul>\n</li>\n</ul>\n<p>⚠️ 配置新增</p>\n<ul>\n<li>夜间模式 <code>darkmode</code> ，<a href=\"config/#%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F\">配置戳此</a></li>\n<li>自动定位 <code>auto_scroll</code> ，<a href=\"config/#%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D\">配置戳此</a></li>\n<li>图床 API 设置 <code>image_server</code> ，<a href=\"config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">配置戳此</a></li>\n</ul>\n<p>⚠️ 背景音乐功能增强，<a href=\"config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90\">配置戳此</a></p>\n<ul>\n<li>可以添加多个播放列表</li>\n<li>加了一些控制按钮</li>\n</ul>\n<p>⚠️ 增加 <code>media</code>  标签，在文章中插入音频和视频播放列表，<a href=\"special/#media%E5%A4%9A%E5%AA%92%E4%BD%93\">方法戳此</a><br />\n⌛  视频播放器有待增强（显示分段标签，字幕）</p>\n<p>🔧 随机图库支持非渣浪图床的任意图片<br />\n🔧 还有许多小 BUG</p>\n<h2 id=\"022-023\"><a class=\"anchor\" href=\"#022-023\">#</a> 0.2.2 👉 0.2.3</h2>\n<p>❗ 增加主题文件外自定义语言包的功能，<a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85\">配置戳此</a><br />\n🔧 提高低版本浏览器兼容性</p>\n<h2 id=\"021-022\"><a class=\"anchor\" href=\"#021-022\">#</a> 0.2.1 👉 0.2.2</h2>\n<p>⚠️ 弃用 <code>mediumzoom</code> ，改成 <code>fancybox</code> ，<a href=\"display/#%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%9B%B8%E5%86%8C\">配置戳此</a><br />\n💡  增加语言包： <code>繁体中文</code> 和 <code>日语</code> <br />\n💡  quiz 功能优化，根据语言显示题型标签<br />\n🔧 修复评论功能中反复初始化 leancloud-storage<br />\n🔧 修复 <code>audio: false</code>  时不能隐藏播放按钮、停止播放</p>\n<h2 id=\"02-021\"><a class=\"anchor\" href=\"#02-021\">#</a> 0.2 👉 0.2.1</h2>\n<p>⚠️ 配置文件添加  <code>loader</code>  参数，<a href=\"config/#%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB\">配置戳此</a><br />\n💡  二级 list 区别显示<br />\n🔧 修复浏览位置定位 BUG<br />\n🔧 修复 firework 动画延迟<br />\n🔧 优化评论功能</p>\n<h2 id=\"019-02\"><a class=\"anchor\" href=\"#019-02\">#</a> 0.1.9 👉 0.2</h2>\n<p>⚠️  <strong>评论功能大改</strong></p>\n<ul>\n<li>弃用不开源的 Valine，改用 MiniValine，并且进行了魔改，<a href=\"https://github.com/amehime/MiniValine\">项目戳此</a><br />\n主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>\n<li>为防止泄露用户邮箱、IP 等隐私信息，弃用 QQ 号获取昵称及头像。<br />\n❗ 同时需要手动进行一些迁移，<a href=\"https://github.com/imaegoo/Valine\">具体步骤戳此</a></li>\n<li>❗ 评论相关的配置亦有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a></li>\n</ul>\n<p>⚠️ 增加单击页面烟花效果，<a href=\"config/#%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88\">配置戳此</a><br />\n💡  弃用 Velocity，改用 anime.js，方便未来添加更多<span class=\"spoiler\" title=\"你知道得太多了\">花里胡哨的</span>功能<span class=\"spoiler\" title=\"你知道得太多了\">严重拖慢页面滑行速度</span><br />\n🔧 新增多枚 icon，包括豆瓣 <code>i-douban</code>  等<br />\n🔧 一些显示问题</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/java/course-1/week-2/",
            "url": "https://murlors.netlify.app/computer-science/java/course-1/week-2/",
            "title": "第2周 判断",
            "date_published": "2020-04-13T11:12:45.000Z",
            "content_html": "<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"关系运算\"><a class=\"anchor\" href=\"#关系运算\">#</a> 关系运算</h2>\n<ul>\n<li>六个关系运算符：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>相等</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>不相等</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于或等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于或等于</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>关系运算结果为  <code>true</code>  或  <code>false</code></li>\n<li>优先级\n<ul>\n<li>所有关系运算符的优先级比算术运算低，但比赋值运算高</li>\n<li>判断是否相等的 == 和！= 优先级比其他的低</li>\n<li>连续的关系运算是从左到右进行的</li>\n</ul>\n</li>\n<li>判断两个浮点数是否相等的方法</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>f1<span class=\"token operator\">-</span>f2<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0000001</span></pre></td></tr></table></figure><ul class=\"task-list\">\n<li>下列表达式中错误的有？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 5 &gt; 3 == 6 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 6 &gt; 5 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> a == b == true</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_3\"> a == b == 6</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\"> a ==  b &gt; false</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_5\"> (a == b) &gt; false<br />\n <code>true 和 false 不能比较大小</code> </label></li>\n</ul>\n<h2 id=\"判断语句-if-else\"><a class=\"anchor\" href=\"#判断语句-if-else\">#</a> 判断语句 if else</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"多路分支-switch-case\"><a class=\"anchor\" href=\"#多路分支-switch-case\">#</a> 多路分支 switch case</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>计算 switch 后面的控制表达式以后，程序会跳到相应的 case，但是如果这个 case 内部没有 break，那么在执行完语句后，就会顺序执行到下面的 case，直到遇到 break 或者 switch 结束。</li>\n</ul>\n<h1 id=\"小测验\"><a class=\"anchor\" href=\"#小测验\">#</a> 小测验</h1>\n<ol>\n<li class=\"quiz essay\">写出以下代码段的执行结果：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">>=</span> max<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"huang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>huang<br />\nzhu</p>\n</blockquote>\n<ol start=\"2\">\n<li class=\"quiz essay\">写出以下代码段的执行结果：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> limit <span class=\"token operator\">&lt;=</span> limit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num1 <span class=\"token operator\">==</span> num2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"grape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>lime<br />\ngrape</p>\n</blockquote>\n<h1 id=\"编程题\"><a class=\"anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-时间换算5分\"><a class=\"anchor\" href=\"#题目1-时间换算5分\">#</a> 题目 1. 时间换算（5 分）</h2>\n<ul>\n<li><strong>题目内容</strong><br />\n UTC 是世界协调时，BJT 是北京时间，UTC 时间相当于 BJT 减去 8。现在，你的程序要读入一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。如 1124 表示 11 点 24 分，而 905 表示 9 点 5 分，36 表示 0 点 36 分，7 表示 0 点 7 分。</li>\n</ul>\n<p>有效的输入范围是 0 到 2359，即你的程序不可能从测试服务器读到 0 到 2359 以外的输入数据。</p>\n<p>你的程序要输出这个时间对应的 UTC 时间，输出的格式和输入的相同，即输出一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。</p>\n<p><em>提醒：要小心跨日的换算。</em></p>\n<ul>\n<li><strong>输入格式</strong><br />\n一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</li>\n<li><strong>输出格式</strong><br />\n一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</li>\n<li><strong>输入样例</strong><br />\n 933</li>\n<li><strong>输出样例</strong><br />\n 133</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> bjt <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> utc <span class=\"token operator\">=</span> bjt <span class=\"token operator\">-</span> <span class=\"token number\">800</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>utc <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   utc <span class=\"token operator\">+=</span> <span class=\"token number\">2400</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 时为负数，则进行隔日计算</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"题目2-信号报告5分\"><a class=\"anchor\" href=\"#题目2-信号报告5分\">#</a> 题目 2. 信号报告（5 分）</h2>\n<ul>\n<li><strong>题目内容</strong><br />\n无线电台的 RS 制信号报告是由三两个部分组成的：</li>\n</ul>\n<p>R (Readability) 信号可辨度即清晰度.</p>\n<p>S (Strength)    信号强度即大小.</p>\n<p>其中 R 位于报告第一位，共分 5 级，用 1—5 数字表示.</p>\n<blockquote>\n<p>1---Unreadable</p>\n<p>2---Barely readable, occasional words distinguishable</p>\n<p>3---Readable with considerable difficulty</p>\n<p>4---Readable with practically no difficulty</p>\n<p>5---Perfectly readable</p>\n</blockquote>\n<p>报告第二位是 S，共分九个级别，用 1—9 中的一位数字表示</p>\n<blockquote>\n<p>1---Faint signals, barely perceptible</p>\n<p>2---Very weak signals</p>\n<p>3---Weak signals</p>\n<p>4---Fair signals</p>\n<p>5---Fairly good signals</p>\n<p>6---Good signals</p>\n<p>7---Moderately strong signals</p>\n<p>8---Strong signals</p>\n<p>9---Extremely strong signals</p>\n</blockquote>\n<p>现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到 59，则输出：<br />\n <code>Extremely strong signals, perfectly readable.</code></p>\n<ul>\n<li>\n<p><strong>输入格式</strong><br />\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是 [11,59] 内有效的数字，这个范围外的数字不可能出现在测试数据中。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br />\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br />\n 33</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br />\n Weak signals, readable with considerable difficulty.</p>\n</li>\n</ul>\n<h3 id=\"解题代码-2\"><a class=\"anchor\" href=\"#解题代码-2\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> readability <span class=\"token operator\">=</span> rs <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> strength <span class=\"token operator\">=</span> rs <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>strength<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Faint signals, barely perceptible\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Very weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fair signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fairly good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Moderately strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Extremely strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>readability<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", unreadable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", barely readable, occasional words distinguishable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with considerable difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with practically no difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>   <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", perfectly readable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>   <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/java/course-1/week-1/",
            "url": "https://murlors.netlify.app/computer-science/java/course-1/week-1/",
            "title": "第1周 计算",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"读输入-字符串输出\"><a class=\"anchor\" href=\"#读输入-字符串输出\">#</a> 读输入、字符串输出</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>scanner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 让 in 这个对象做读入下一行的动作，结果交给 System.out 这个对象去打印一行。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>tips：</p>\n<ul>\n<li><code>System.out.println</code>  会换行， <code>System.out.print</code>  则不会换行</li>\n<li>出现警告： <code>Resource leak: 'in' is never closed</code> ，可以在函数的最后加入</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 释放</span></pre></td></tr></table></figure><h2 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p><strong>形式</strong>：&lt;类型名称&gt; &lt; 变量名称 &gt; = &lt; 初始值 &gt;<br />\n <code>int price, amount; // 同时定义两个变量</code> <br />\n <code>int price = 0; // 定义变量并赋值</code> <br />\n <code>int price, amount = 100, age;</code></p>\n</li>\n<li>\n<p><strong>类型名称</strong>：Java 是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>\n</li>\n<li>\n<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java 的保留字也不能用作标识符。</p>\n</li>\n<li>\n<p>Java 的保留字列表</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>do</th>\n<th>implements</th>\n<th>protected</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>import</td>\n<td>public</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>instanceof</td>\n<td>return</td>\n<td>true</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>try</td>\n</tr>\n<tr>\n<td>case</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>while</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>final</td>\n<td>long</td>\n<td>strictfp</td>\n<td>void</td>\n</tr>\n<tr>\n<td>char</td>\n<td>finally</td>\n<td>native</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>class</td>\n<td>float</td>\n<td>new</td>\n<td>switch</td>\n</tr>\n<tr>\n<td>const*</td>\n<td>for</td>\n<td>null</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>goto*</td>\n<td>package</td>\n<td>this</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>private</td>\n<td>throw</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"task-list\">\n<li>以下哪些标识符是符合规则的？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> currency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> lastName</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> fireplace</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> _last_name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\"> xingmin</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> class</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> goto</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> 4ever</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\" /><label for=\"cbx_8\"> time-machine</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\" /><label for=\"cbx_9\"> Int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\" /><label for=\"cbx_10\"> $12</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\" /><label for=\"cbx_11\"> 我是变量</label></li>\n</ul>\n<h2 id=\"常量-final\"><a class=\"anchor\" href=\"#常量-final\">#</a> 常量 final</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">AMOUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//final 是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span></pre></td></tr></table></figure><h2 id=\"变量类型\"><a class=\"anchor\" href=\"#变量类型\">#</a> 变量类型</h2>\n<h3 id=\"整数-int\"><a class=\"anchor\" href=\"#整数-int\">#</a> 整数 int</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>如果用户输入的不是整数，则会报错  <code>java.util.InputMismatchException</code> 。</li>\n<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>\n<li>每次召唤 <code>in.nextInt()</code> ，它就等待用户输入一个整数。</li>\n<li>两个整数的运算结果只能是整数。</li>\n<li>在 Java 中， <code>10</code>  和 <code>10.0</code>  是完全不同的数。</li>\n</ul>\n<h3 id=\"浮点数-double\"><a class=\"anchor\" href=\"#浮点数-double\">#</a> 浮点数 double</h3>\n<ul>\n<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.2</span><span class=\"token operator\">-</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 结果为 0.09999999999999987</span></pre></td></tr></table></figure><ul>\n<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>\n</ul>\n<h2 id=\"赋值运算\"><a class=\"anchor\" href=\"#赋值运算\">#</a> 赋值运算</h2>\n<h3 id=\"强制类型转换\"><a class=\"anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h3>\n<ul>\n<li>浮点数和整数放在一起运算时，Java 会将整数转换成浮点数，然后进行浮点数运算。</li>\n<li>强制性转换的优先级高于四则运算。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不会报错</span></pre></td></tr></table></figure><h3 id=\"运算符优先级\"><a class=\"anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<ul>\n<li>单目运算符 <code>+</code>   <code>-</code>  优先级最高</li>\n<li>结合关系一般自左向右，单目 <code>+</code>   <code>-</code>  和赋值 <code>=</code>  自右向左。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"复合赋值\"><a class=\"anchor\" href=\"#复合赋值\">#</a> 复合赋值</h3>\n<ul>\n<li>5 个算术运算符， <code>+ - * / %</code> ，可以和赋值运算符  <code>=</code>  结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token operator\">*</span> <span class=\"token operator\">=</span> sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>total <span class=\"token operator\">=</span> total<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>total <span class=\"token operator\">/=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>递增递减运算符  <code>++</code>   <code>--</code> ，给变量 + 1 或 - 1</li>\n<li>前缀后缀：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t1 <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//t1 先被赋值为 a 即 14， a 自加到 15</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>t2 <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 先自加到 15，t2 被赋值为 a 即 15</span></pre></td></tr></table></figure><h1 id=\"编程题\"><a class=\"anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-温度转换5分\"><a class=\"anchor\" href=\"#题目1-温度转换5分\">#</a> 题目 1. 温度转换（5 分）</h2>\n<ul>\n<li><strong>题目内容</strong><br />\n写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</li>\n</ul>\n<p><code>°F = (9/5)*°C + 32</code></p>\n<p>其中 C 表示摄氏温度，F 表示华氏温度。</p>\n<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>\n<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>\n<p><code>(int)x;</code></p>\n<p>其中 x 是要转换的那个浮点数。</p>\n<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>\n<ul>\n<li><strong>输入格式</strong><br />\n一个整数。</li>\n<li><strong>输出格式</strong><br />\n一个整数。</li>\n<li><strong>输入样例</strong><br />\n 100</li>\n<li><strong>输出样例</strong><br />\n 37</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 获得输入的整数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> fahrenheit <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">// 计算摄氏度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">double</span> centigrade <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// 将浮点数转换为整数输出</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>centigrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/hackintosh/lenovo-y40-70-laptop-mac-os-guide-and-efi-share/",
            "url": "https://murlors.netlify.app/computer-science/note/hackintosh/lenovo-y40-70-laptop-mac-os-guide-and-efi-share/",
            "title": "联想Y40-70笔记本电脑安装MacOS教程及EFI分享",
            "date_published": "2018-08-21T08:30:00.000Z",
            "content_html": "<h1 id=\"电脑配置\"><a class=\"anchor\" href=\"#电脑配置\">#</a> 电脑配置</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>规格</strong></th>\n<th style=\"text-align:left\"><strong>详细信息</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>电脑型号</strong></td>\n<td style=\"text-align:left\"><strong>Lenovo Y40-70 笔记本电脑</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>操作系统</strong></td>\n<td style=\"text-align:left\"><strong>Windows 10 64 位 (DirectX 12)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>处理器</strong></td>\n<td style=\"text-align:left\"><strong>英特尔 Core i5-4210U @ 1.70GHz 四核</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>主板</strong></td>\n<td style=\"text-align:left\"><strong>Lenovo Erazer Y4 (Intel Haswell-ULT - Lynx Point-LP)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>显卡</strong></td>\n<td style=\"text-align:left\"><strong>英特尔 HD Graphics 4400</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>内存</strong></td>\n<td style=\"text-align:left\"><strong>8 GB</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>硬盘</strong></td>\n<td style=\"text-align:left\"><strong>希捷 ST500LM000 (500 GB / 固态混合硬盘)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>显示器</strong></td>\n<td style=\"text-align:left\"><strong>奇美 CMN1472 (14 英寸)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>声卡</strong></td>\n<td style=\"text-align:left\"><strong>瑞昱 @ 英特尔 Lynx Point-LP High Definition Audio (ALC283)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>无线网卡</strong></td>\n<td style=\"text-align:left\"><strong>英特尔 Dual Band Wireless-AC 3160</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>有线网卡</strong></td>\n<td style=\"text-align:left\"><strong>Realtek RTL8168/8111/8112 Gigabit Ethernet Controller</strong></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>说下黑苹果情况，使用 Hotpatch 的方法，现在基本完美</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/kWRNFd15TMuEeI3.png\" alt=\"\" /></p>\n<ul>\n<li><strong>1、显卡：已屏蔽独显，HD4400 正常驱动，有水波纹效果，显卡变频范围在 200-1000MHz 之间，已使用 Kext Patchs 修复 HD4400 开机花屏及开机后鼠标卡顿，且已将 VRAM 显存从 1536MB 扩展至 2048MB。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/OtRXw1qBiY7GWfD.png\" alt=\"\" /></p>\n<ul>\n<li><strong>2、USB：可正确识别 USB2.0 和 USB3.0 (使用 USBPower.kext 实现)。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/HpWTNGkXDcS1amE.png\" alt=\"\" /></p>\n<ul>\n<li><strong>3、亮度调节：小太阳可用，能保存亮度，能配合 VoodooPS2Controller 实现 FN + 上下箭头键调节亮度 (配合 SSDT-PNLF+SSDT-FN 和重命名补丁实现)。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/X4dLczraoCjeAOR.png\" alt=\"\" /></p>\n<ul>\n<li><strong>4、声卡：音质不错无杂音，扬声器耳机等正常有声，插拔切换正常，麦克风可用，睡眠唤醒后有声音，缺点暂无。(AppleAlc.kext,Layout-ID 注入为 3)。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/bKtmY65Ig1CDuNf.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>5、音量调节：配合 VoodooPS2Controller.kext 实现 FN + 左右箭头调节。</strong></p>\n</li>\n<li>\n<p><strong>6、变频：原生变频，变频灵活，似乎更为省电 (抛弃了之前所使用的<a href=\"https://github.com/Piker-Alpha/ssdtPRGen.sh/\"> ssdtPRGen.sh</a> 自动生成的 SSDT) 但变频范围从 800MHZ-2700MHZ 都有，支持睿频。</strong></p>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/Twc8UZay4uC7mot.png\" alt=\"\" /></p>\n<ul>\n<li><strong>7、电源管理：电源管理正常，能显示并更新剩余电量，睡眠唤醒正常，正常断电。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/is9kdWFjSONMCJB.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>8、键盘：VoodooPS2Controller 输入正常，VoodooPS2Controller 默认调换 Control 和 Command 键，符合 Windows Ctrl 快键键使用习惯。(VoodooPS2Controller 有个小毛病，就是大小写指示灯不太可靠，但是为了实现快捷键小太阳，只能使用 VoodooPS2Controller)。</strong></p>\n</li>\n<li>\n<p><strong>9、触控板：实测支持三指手势 (在键盘 - 快捷键中找到想要实现的功能，在修改快捷键时直接三指滑动你想要的方向就可以了)，左键和右键貌似无法使用，可能是我的触摸板的问题 (已确认)。</strong></p>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/TrEfRo2ObsFzLW6.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>10、有线网卡 RTL8111 完美驱动。</strong></p>\n</li>\n<li>\n<p><strong>11、原装无线网卡 Intel 3160AC 无解，暂时使用 RTL8168EU 芯片的 USB 无线网卡，RTL8168 芯片无线网卡驱动下载地址：<a href=\"https://www.tp-link.com/en/download/TL-WN725N.html#Driver\">tp-link.com/en/download/TL-WN725N.html#Driver</a></strong></p>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/jFLVyNo8XI7sCBx.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>12、蓝牙：蓝牙设备极不稳定，必须正常启动后重启才能使用。</strong></p>\n</li>\n<li>\n<p><strong>13、摄像头可以使用。</strong></p>\n</li>\n<li>\n<p><strong>14、读卡器：找不到相关驱动，所以暂时无解。</strong></p>\n</li>\n<li>\n<p><strong>15、显示器外接：HDMI 需自测 (曾经一个群友测试过可以使用，HDMI 音频和显示都正常)。</strong></p>\n</li>\n<li>\n<p><strong>16、独显：无解，这辈子都不可能驱动独显的😂。</strong></p>\n</li>\n</ul>\n<h1 id=\"bios设置\"><a class=\"anchor\" href=\"#bios设置\">#</a> BIOS 设置</h1>\n<p><strong>A、引导方式建议 GPT+UEFI，MBR 分区的建议转 GPT 格式，接着修复引导</strong></p>\n<p><strong>B、BIOS 版本升级到 1.07 以上，最新的 BIOS 版本为 1.12</strong></p>\n<p><strong>1.12 版 BIOS 下载地址：[<a href=\"http://down.delicacy.ooo/Y40-70BIOS/Y40-70\">http://down.delicacy.ooo/Y40-70BIOS/Y40-70</a> BIOS V1.12.exe](down.delicacy.ooo/Y40-70BIOS/Y40-70 BIOS V1.12.exe)</strong></p>\n<p><strong>C、BIOS 设置步骤 (开机按 F2 进入)</strong></p>\n<ul>\n<li><strong>1、Configuration-SATA Controller Model-Ahci</strong></li>\n<li><strong>2、Configuration-Intel Virtual Technology-Enabled</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/jXCdPDL42q8BTYI.jpg\" alt=\"\" /></p>\n<ul>\n<li><strong>3、Security-Secure Boot-Disabled</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/wryH4fFPg23cAbR.jpg\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>4、Boot-Boot Priorlty-UEFI-First</strong></p>\n</li>\n<li>\n<p><strong>5、Boot-Boot Mode-Legacy Support</strong></p>\n</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/ArydmVI3sS29h8F.jpg\" alt=\"\" /></p>\n<ul>\n<li><strong>6、Exit-os oprimized defaults-other os</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/QYp6eRrkLxHEO2J.jpg\" alt=\"\" /></p>\n<ul>\n<li><strong>7、F10 保存退出</strong></li>\n</ul>\n<h1 id=\"系统安装步骤\"><a class=\"anchor\" href=\"#系统安装步骤\">#</a> 系统安装步骤</h1>\n<ul>\n<li>\n<p><strong>(推荐) UEFI+GPT+Clover Windows&amp;Mac 双系统安装教程：<a href=\"http://bbs.pcbeta.com/viewthread-1443155-1-1.html\">bbs.pcbeta.com/viewthread-1443155-1-1.html</a></strong></p>\n</li>\n<li>\n<p><strong>Clover 引导原版 InstallESD.dmg 全盘安装指路，白苹果安装体验 + Recovery HD+Find Mac：<a href=\"http://bbs.pcbeta.com/viewthread-1230436-1-1.html\">bbs.pcbeta.com/viewthread-1230436-1-1.html</a></strong></p>\n</li>\n</ul>\n<h1 id=\"相关下载\"><a class=\"anchor\" href=\"#相关下载\">#</a> 相关下载</h1>\n<p><strong>Bootice:<a href=\"https://delicacy.ooo/down/Yindao/BOOTICE.zip\">down.delicacy.ooo/Yindao/BOOTICE.zip</a></strong></p>\n<p><strong>Clover Configurator:[down.delicacy.ooo/Hackintosh/Software/Clover Configurator.app.zip](<a href=\"https://delicacy.ooo/down/Hackintosh/Software/Clover\">https://delicacy.ooo/down/Hackintosh/Software/Clover</a> Configurator.app.zip)</strong></p>\n<p><strong>EasyUEFI:<a href=\"https://delicacy.ooo/down/Yindao/EasyUEFI.exe\">down.delicacy.ooo/Yindao/EasyUEFI.exe</a></strong></p>\n<p><strong>KextUtility:<a href=\"https://delicacy.ooo/down/Hackintosh/Software/KextUtility.app.zip\">down.delicacy.ooo/Hackintosh/Software/KextUtility.app.zip</a></strong></p>\n<p><strong>Lenovo Y40-70 V1.12Bios:[down.delicacy.ooo/Y40-70BIOS/Y40-70 BIOS V1.12.exe](<a href=\"https://delicacy.ooo/down/Y40-70BIOS/Y40-70\">https://delicacy.ooo/down/Y40-70BIOS/Y40-70</a> BIOS V1.12.exe)</strong></p>\n<p><strong>Maciasl：<a href=\"https://delicacy.ooo/down/Hackintosh/Software/MaciASL.app.zip\">down.delicacy.ooo/Hackintosh/Software/MaciASL.app.zip</a></strong></p>\n<p><strong>PlistEditPro:<a href=\"https://delicacy.ooo/down/Hackintosh/Software/PlistEditPro.zip\">down.delicacy.ooo/Hackintosh/Software/PlistEditPro.zip</a></strong></p>\n<p><strong>TransMac:<a href=\"https://delicacy.ooo/down/Hackintosh/Software/TransMac10.4.zip\">down.delicacy.ooo/Hackintosh/Software/TransMac10.4.zip</a></strong></p>\n<p><strong>Tuxerantfs 2018.dmg:[down.delicacy.ooo/Hackintosh/Software/Tuxerantfs 2018.dmg](<a href=\"https://delicacy.ooo/down/Hackintosh/Software/Tuxerantfs\">https://delicacy.ooo/down/Hackintosh/Software/Tuxerantfs</a> 2018.dmg)</strong></p>\n<h1 id=\"efi更新源\"><a class=\"anchor\" href=\"#efi更新源\">#</a> EFI 更新源</h1>\n<p><a href=\"https://github.com/1595258509/Lenovo-Y40-70-i5-4210u\"><strong>github.com/1595258509/Lenovo-Y40-70-i5-4210u</strong></a></p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "黑苹果",
                "教程",
                "黑苹果",
                "Clover"
            ]
        },
        {
            "id": "https://murlors.netlify.app/computer-science/note/hackintosh/lenovo-y40-70-crack-white-list-guide/",
            "url": "https://murlors.netlify.app/computer-science/note/hackintosh/lenovo-y40-70-crack-white-list-guide/",
            "title": "联想Y40-70破解白名单教程",
            "date_published": "2018-08-20T13:00:00.000Z",
            "content_html": "<h2 id=\"为什么要破解白名单呢\"><a class=\"anchor\" href=\"#为什么要破解白名单呢\">#</a> <strong>为什么要破解白名单呢？</strong></h2>\n<hr />\n<p><strong>破解白名单可以让 Y40 安装第三方的无线网卡，黑苹果的时候很有用，在 MAC OS 上，出厂自带的网卡基本是废了，蓝牙时可用时不可用，无线是用不了了，只能安装第三方的网卡。</strong></p>\n<h2 id=\"本文章中所需要的工具\"><a class=\"anchor\" href=\"#本文章中所需要的工具\">#</a> <strong>本文章中所需要的工具</strong></h2>\n<hr />\n<ul>\n<li>\n<p><strong>[1]Y40-70 BIOS V1.12.exe:<a href=\"https://delicacy.ooo/down/Y40-70BIOS/Y40-70%20BIOS%20V1.12.exe\">down.delicacy.ooo/Y40-70BIOS/Y40-70 BIOS V1.12.exe</a></strong></p>\n</li>\n<li>\n<p><strong>[2]Fptw64.zip:<a href=\"https://delicacy.ooo/down/Y40-70BIOS/Fptw64.zip\">down.delicacy.ooo/Y40-70BIOS/Fptw64.zip</a></strong></p>\n</li>\n<li>\n<p><strong>[3]Y40-70 BIOS V1.07.exe:<a href=\"https://down.delicacy.ooo/down/Y40-70BIOS/Y40-70%20BIOS%20V1.07.exe\">down.delicacy.ooo/Y40-70BIOS/Y40-70 BIOS V1.07.exe</a></strong></p>\n</li>\n<li>\n<p><strong>[4] Insyde EzH2O 中文版.zip:<a href=\"https://delicacy.ooo/down/Y40-70BIOS/Insyde%20EzH2O%E4%B8%AD%E6%96%87%E7%89%88.zip\">down.delicacy.ooo/Y40-70BIOS/InsydeEzH2O 中文版.zip</a></strong></p>\n</li>\n<li>\n<p><strong>[5]UEFIPATCH.zip:<a href=\"https://delicacy.ooo/down/Y40-70BIOS/UEFIPATCH.zip\">down.delicacy.ooo/Y40-70BIOS/UEFIPATCH.zip</a> (可选)</strong></p>\n</li>\n</ul>\n<h2 id=\"升级bios至112\"><a class=\"anchor\" href=\"#升级bios至112\">#</a> <strong>升级 BIOS 至 1.12</strong></h2>\n<hr />\n<ul>\n<li><strong>1、在 Windows 系统下下载附件<a href=\"http://down.delicacy.ooo/Y40-70BIOS/Y40-70%20BIOS%20V1.12.exe\"> Y40-70 BIOS V1.12</a></strong></li>\n<li><strong>2、以管理员身份运行附件 Y40-70 BIOS V1.12.exe， 运行大致如图：</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/DbANzcWBr8vpTH3.png\" alt=\"\" /></p>\n<ul>\n<li><strong>3、(ps: 打开这个软件的时候要把充电器插在电脑上，不然打开软件就会报错) 在 跳出的窗口中点击 “确定”，电脑就会自动重启，进入 BIOS 刷写模式，等待大概 2 分钟，电脑会自动重启，这个时候电脑的 BIOS 版本就是 1.12 了。</strong></li>\n<li><strong>切记，升级 / 降级 BIOS 的过程中万万不可关机 / 拔掉电源等操作，安安静静等电脑更新就好了，如果 BIOS 更新的过程中出现断电之类的导致电脑无法开机，可能要返厂才能解决问题了。</strong></li>\n</ul>\n<h2 id=\"备份112的bios再将bios降级至107\"><a class=\"anchor\" href=\"#备份112的bios再将bios降级至107\">#</a> <strong>备份 1.12 的 BIOS，再将 BIOS 降级至 1.07</strong></h2>\n<hr />\n<ul>\n<li><strong>1、开机时摁 F2 进入 BIOS，进入 Configuration-BIOS Back Flash，按回车，选择 Enabled，意思就是允许 BIOS 降级。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/jXCdPDL42q8BTYI.jpg\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>2、下载附件<a href=\"delicacy.ooo/down/Y40-70BIOS/Fptw64.zip\"> Fptw64.zip</a>，解压，然后以管理员身份打开 backup.exe，完成后会自动生成一个 bios_bak.bin 在目录下。</strong></p>\n</li>\n<li>\n<p><strong>3、将 BIOS 版本降级至 1.07：</strong></p>\n</li>\n<li>\n<p><strong>先下载附件 [Y40-70 BIOS V1.07.exe](down.delicacy.ooo/Y40-70BIOS/Y40-70 BIOS V1.07.exe)</strong></p>\n</li>\n<li>\n<p><strong>然后以管理员身份运行 Y40-70 BIOS V1.07.exe，和升级 1.12 时一样的操作，将 BIOS 版本降至 1.07</strong></p>\n</li>\n</ul>\n<h2 id=\"修改112bios\"><a class=\"anchor\" href=\"#修改112bios\">#</a> <strong>修改 1.12BIOS</strong></h2>\n<hr />\n<ul>\n<li><strong>1、BIOS 成功降级至 1.07 后电脑正常开机进入 Windows 系统下载附件中的<a href=\"delicacy.ooo/down/Y40-70BIOS/Insyde%20EzH2O%E4%B8%AD%E6%96%87%E7%89%88.zip\"> Insyde EzH2O 中文版</a>和<a href=\"delicacy.ooo/down/Y40-70BIOS/UEFIPATCH.zip\"> UEFI PATCH</a> (可选)。</strong></li>\n<li><strong>2、解压 UEFI PATCH.zip，将上一步生成的 bios_bak.bin 放入该文件夹，打开 patch.bat，会自动生成 bios_patch.bin。(UEFI PATCH 的作用是可以在安装黑苹果时不用点选 PM 内核补丁，所以这一步操作可选)</strong></li>\n<li><strong>3、解压 Insyde EzH2O 中文版.zip，将 bios_bak.bin 或 bios_patch.bin 放入该文件夹。</strong></li>\n<li><strong>4、以管理员身份打开 EzH2O.exe</strong></li>\n<li><strong>5、点击左上角的文件 - 载入，打开刚复制的 bios_bak.bin 或 bios_patch.bin。</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/ViGLFruSafqpYkl.png\" alt=\"\" /></p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/HSlNiCfcjov9VtY.png\" alt=\"\" /></p>\n<ul>\n<li><strong>6、选择删除现有模块</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/GY5ZdDipeTkBf1P.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p><strong>7、找到 GUID 为 11D378C2-B472-412F-AD87-1BE4CD8B33A6 的模块，点击修补：</strong></p>\n</li>\n<li>\n<p><strong>8、修补完成后，再点击左上角的文件 - 另存，把该文件保存为 bios_f.bin 并放入 fptw64 所在文件夹中。</strong></p>\n</li>\n</ul>\n<h2 id=\"刷入112bios\"><a class=\"anchor\" href=\"#刷入112bios\">#</a> <strong>刷入 1.12BIOS</strong></h2>\n<hr />\n<ul>\n<li><strong>先将电脑合盖睡眠 2-3 秒，然后打开电脑，进入 fptw64 所在文件夹，以管理员身份运行 flash.exe。</strong></li>\n<li><strong>当出现以下界面时，恭喜你，你的电脑已经解除了白名单，可以随意换网卡了</strong></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2022/08/14/h4YKIpn2ZXiLtdx.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>附：刷完 bios 别忘了设置 bios 的虚拟化技术，安全启动选项及启动模式。</strong></p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "黑苹果",
                "教程",
                "BIOS",
                "白名单",
                "黑苹果"
            ]
        }
    ]
}